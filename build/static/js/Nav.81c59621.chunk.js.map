{"version":3,"file":"static/js/Nav.81c59621.chunk.js","mappings":"oNAGe,SAASA,IACpB,IAAMC,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAyCA,EAAMF,MAAMG,SACzEC,GAAaC,EAAAA,EAAAA,UAAQ,kBAAML,EAAQ,qBAAuB,YAAW,CAACA,IAC5E,OACI,iBAAKM,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,WACA,iBAAMC,EAAE,2XAA2XF,KAAML,KACzY,iBAAMQ,SAAS,UAAUC,SAAS,UAAUF,EAAE,i2GAAi2GF,KAAML,O,wBCG75G,GANmBU,EAAAA,EAAAA,OAAK,YAAiD,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,SAC1C,OAAO,UAAC,KAAD,CAAMC,GAAIH,EAAMI,MAAOH,EAAvB,UACFF,GAAQA,EACRG,GAAYA,Q,SCEfG,EAAM,SAAC,GAAuB,EAAtBC,GAAuB,IAC3BC,GAAStB,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAiFA,KACtGsB,GAAWC,EAAAA,EAAAA,MASjB,OALAC,EAAAA,EAAAA,YAAU,WACNC,SAASC,KAAKC,UAAUC,OAAO,OAAQP,EAAOvB,MAAMG,OACpD4B,aAAaC,QAAQ,OAAQC,KAAKC,UAAUX,EAAOvB,MAAMG,UAC1D,CAACoB,EAAOvB,MAAMG,SAGb,UAACgC,EAAD,YACI,UAACC,EAAA,EAAD,CAAIC,WAAYd,EAAOe,KAAKC,MAA5B,WACI,SAAC,EAAD,CAAYvB,KAAK,SAAjB,oBACA,SAAC,EAAD,CAAYA,KAAK,UAAjB,wBAEJ,UAACoB,EAAA,EAAD,CAAIC,UAAWd,EAAOe,KAAKC,MAA3B,WACI,SAAC,EAAD,CAAYvB,KAAK,QAAjB,mBACA,SAACwB,EAAA,EAAD,CAAQlB,GAAG,MAAX,wBAEJ,SAACkB,EAAA,EAAD,CAAQlB,GAAG,uBAAuBmB,QAAS,kBAAMjB,EAAS,CAACkB,KAAMC,EAAAA,KAAjE,UAAiF,SAAC5C,EAAD,UAI7F,GAAee,EAAAA,EAAAA,MAAKO,GAEdc,EAAYS,EAAAA,GAAAA,IAAH,iX,+DC7Bf,IAPe,SAAC,GAAyD,IAAxD1B,EAAuD,EAAvDA,SAAUI,EAA6C,EAA7CA,GAAImB,EAAyC,EAAzCA,QAASI,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,WAC1C,OACI,SAACC,EAAD,CAAcC,UAAW1B,EAAImB,QAASA,EAASI,KAAMA,EAAMI,SAAUH,EAArE,SACK5B,KAMb,IAAM6B,EAAeH,EAAAA,GAAAA,OAAH,qfAoBZ,SAACM,GACC,OAAOA,EAAML,MACT,IAAK,WAAY,OAAOM,EAAAA,EAAAA,IAAP,8dA8BjB,IAAK,iBAAkB,OAAOA,EAAAA,EAAAA,IAAP,6GAKvB,IAAK,kBAAmB,OAAOA,EAAAA,EAAAA,IAAP,sLAKxB,IAAK,aAAc,OAAOA,EAAAA,EAAAA,IAAP,mEAGnB,IAAK,iBAAkB,OAAOA,EAAAA,EAAAA,IAAP","sources":["Svg/ToggleThemeIcon.tsx","Components/PureComponents/AnchorLink.tsx","Components/Journal Components/Header/Nav.tsx","Components/PureComponents/Button.tsx"],"sourcesContent":["import { useMemo } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nexport default function ToggleThemeIcon(){\r\n    const theme = useSelector((state: {theme:{value:true | false}}) => state.theme.value)\r\n    const fill_color = useMemo(() => theme ? 'hsl(258, 84%, 65%)' : '#3B0C9E', [theme])\r\n    return(\r\n        <svg width=\"30\" height=\"30\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M20 11.6667C17.7899 11.6667 15.6702 12.5446 14.1074 14.1074C12.5446 15.6702 11.6667 17.7899 11.6667 20C11.6667 22.2101 12.5446 24.3297 14.1074 25.8925C15.6702 27.4553 17.7899 28.3333 20 28.3333C22.2101 28.3333 24.3298 27.4553 25.8926 25.8925C27.4554 24.3297 28.3333 22.2101 28.3333 20C28.3333 17.7899 27.4554 15.6702 25.8926 14.1074C24.3298 12.5446 22.2101 11.6667 20 11.6667Z\" fill={fill_color}/>\r\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20 1.66666C20.442 1.66666 20.8659 1.84225 21.1785 2.15481C21.4911 2.46737 21.6667 2.8913 21.6667 3.33332V4.99999C21.6667 5.44202 21.4911 5.86594 21.1785 6.1785C20.8659 6.49106 20.442 6.66666 20 6.66666C19.558 6.66666 19.134 6.49106 18.8215 6.1785C18.5089 5.86594 18.3333 5.44202 18.3333 4.99999V3.33332C18.3333 2.8913 18.5089 2.46737 18.8215 2.15481C19.134 1.84225 19.558 1.66666 20 1.66666ZM5.48833 5.48832C5.80088 5.17587 6.22473 5.00035 6.66667 5.00035C7.10861 5.00035 7.53245 5.17587 7.845 5.48832L10.345 7.98832C10.6486 8.30266 10.8166 8.72366 10.8128 9.16066C10.809 9.59765 10.6337 10.0157 10.3247 10.3247C10.0157 10.6337 9.59766 10.809 9.16067 10.8128C8.72367 10.8166 8.30267 10.6486 7.98833 10.345L5.48833 7.84499C5.17588 7.53244 5.00036 7.1086 5.00036 6.66666C5.00036 6.22472 5.17588 5.80087 5.48833 5.48832ZM34.5117 5.48832C34.8241 5.80087 34.9996 6.22472 34.9996 6.66666C34.9996 7.1086 34.8241 7.53244 34.5117 7.84499L32.0117 10.345C31.8579 10.5042 31.674 10.6311 31.4707 10.7185C31.2673 10.8058 31.0486 10.8518 30.8273 10.8537C30.606 10.8557 30.3866 10.8135 30.1817 10.7297C29.9769 10.6459 29.7908 10.5221 29.6343 10.3656C29.4779 10.2092 29.3541 10.0231 29.2703 9.81825C29.1865 9.61342 29.1443 9.39395 29.1462 9.17265C29.1482 8.95135 29.1941 8.73266 29.2815 8.52932C29.3688 8.32598 29.4958 8.14207 29.655 7.98832L32.155 5.48832C32.4675 5.17587 32.8914 5.00035 33.3333 5.00035C33.7753 5.00035 34.1991 5.17587 34.5117 5.48832ZM1.66667 20C1.66667 19.558 1.84226 19.134 2.15482 18.8215C2.46738 18.5089 2.89131 18.3333 3.33333 18.3333H5C5.44203 18.3333 5.86595 18.5089 6.17851 18.8215C6.49107 19.134 6.66667 19.558 6.66667 20C6.66667 20.442 6.49107 20.8659 6.17851 21.1785C5.86595 21.4911 5.44203 21.6667 5 21.6667H3.33333C2.89131 21.6667 2.46738 21.4911 2.15482 21.1785C1.84226 20.8659 1.66667 20.442 1.66667 20ZM33.3333 20C33.3333 19.558 33.5089 19.134 33.8215 18.8215C34.134 18.5089 34.558 18.3333 35 18.3333H36.6667C37.1087 18.3333 37.5326 18.5089 37.8452 18.8215C38.1577 19.134 38.3333 19.558 38.3333 20C38.3333 20.442 38.1577 20.8659 37.8452 21.1785C37.5326 21.4911 37.1087 21.6667 36.6667 21.6667H35C34.558 21.6667 34.134 21.4911 33.8215 21.1785C33.5089 20.8659 33.3333 20.442 33.3333 20ZM10.345 29.655C10.6575 29.9675 10.833 30.3914 10.833 30.8333C10.833 31.2753 10.6575 31.6991 10.345 32.0117L7.845 34.5117C7.53066 34.8153 7.10966 34.9832 6.67267 34.9794C6.23567 34.9756 5.81765 34.8004 5.50864 34.4914C5.19962 34.1823 5.02434 33.7643 5.02054 33.3273C5.01675 32.8903 5.18474 32.4693 5.48833 32.155L7.98833 29.655C8.30088 29.3425 8.72473 29.167 9.16667 29.167C9.60861 29.167 10.0325 29.3425 10.345 29.655ZM29.655 29.655C29.9675 29.3425 30.3914 29.167 30.8333 29.167C31.2753 29.167 31.6991 29.3425 32.0117 29.655L34.5117 32.155C34.8153 32.4693 34.9833 32.8903 34.9795 33.3273C34.9757 33.7643 34.8004 34.1823 34.4914 34.4914C34.1824 34.8004 33.7643 34.9756 33.3273 34.9794C32.8903 34.9832 32.4693 34.8153 32.155 34.5117L29.655 32.0117C29.3425 31.6991 29.167 31.2753 29.167 30.8333C29.167 30.3914 29.3425 29.9675 29.655 29.655ZM20 33.3333C20.442 33.3333 20.8659 33.5089 21.1785 33.8215C21.4911 34.134 21.6667 34.558 21.6667 35V36.6667C21.6667 37.1087 21.4911 37.5326 21.1785 37.8452C20.8659 38.1577 20.442 38.3333 20 38.3333C19.558 38.3333 19.134 38.1577 18.8215 37.8452C18.5089 37.5326 18.3333 37.1087 18.3333 36.6667V35C18.3333 34.558 18.5089 34.134 18.8215 33.8215C19.134 33.5089 19.558 33.3333 20 33.3333Z\" fill={fill_color}/>\r\n    </svg>\r\n\r\n    )\r\n}","import { memo, ReactNode } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CSSProperties } from \"styled-components\";\r\n\r\ntype AnchorProps = {text?:string, path:string, styles?:CSSProperties, children?:ReactNode}\r\n\r\nconst AnchorLink = memo(({text, path, styles, children} : AnchorProps)=>{\r\n    return <Link to={path} style={styles}>\r\n        {text && text}\r\n        {children && children}\r\n    </Link>\r\n})\r\nexport default AnchorLink\r\n\r\n","import { memo, useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport styled from 'styled-components'\r\nimport { TOGGLE_THEME } from \"../../../Redux/slices/theme.slice\"\r\nimport ToggleThemeIcon from \"../../../Svg/ToggleThemeIcon\"\r\nimport If from \"../../../Utility/Utility Components/If\"\r\nimport AnchorLink from \"../../PureComponents/AnchorLink\"\r\nimport Button from \"../../PureComponents/Button\"\r\n\r\n\r\n\r\nconst Nav = ({cn}:{cn?: string}) => {\r\n    const states = useSelector((state: {user:{email?:string, notes?: {}[]}, theme: {value?: true | false} }) => state)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    // persisting the theme state in local storage\r\n    useEffect(() => {\r\n        document.body.classList.toggle('dark', states.theme.value)\r\n        localStorage.setItem('dark', JSON.stringify(states.theme.value))\r\n    }, [states.theme.value] )\r\n\r\n    return(\r\n        <StyledNav >\r\n            <If condition={!states.user.email}>\r\n                <AnchorLink path=\"/login\">Login</AnchorLink>\r\n                <AnchorLink path=\"/signup\">Signup</AnchorLink>\r\n            </If>\r\n            <If condition={states.user.email}>\r\n                <AnchorLink path=\"/note\">Note</AnchorLink>\r\n                <Button cn='red'>Logout</Button>\r\n            </If>\r\n            <Button cn='svg theme-toggle-btn' onClick={() => dispatch({type: TOGGLE_THEME})}><ToggleThemeIcon/></Button>\r\n        </StyledNav>\r\n    )\r\n}\r\nexport default memo(Nav)\r\n\r\nconst StyledNav = styled.nav`\r\n    /* flex: 1; */\r\n    justify-content:space-between;\r\n    display: flex;\r\n    align-items:center;\r\n\r\n    @media (min-width: 800px){\r\n        max-width: var(--nav-width);\r\n        --nav-width: 20%;\r\n        margin-left: auto;\r\n    }\r\n\r\n    .svg{\r\n        border: none;\r\n        &:hover{\r\n           background-color: unset;\r\n        }\r\n    }\r\n`","import styled, { css } from \"styled-components\"\r\n\r\nconst Button = ({children, cn, onClick, mode, isDisabled}: PropType) => {\r\n    return(\r\n        <StyledButton className={cn} onClick={onClick} mode={mode} disabled={isDisabled}>\r\n            {children}\r\n        </StyledButton>\r\n    )\r\n}\r\nexport default Button\r\n\r\nconst StyledButton = styled.button<{mode?: BtnMode}>`\r\n    font-size: clamp(1.6rem, 1.6rem, 1.6vw);\r\n    text-decoration: none;\r\n    color: var(--brand-clr-400);\r\n    padding: clamp(0.3rem, 0.4rem, 0.4vw) clamp(0.7rem, 0.9rem, 0.9vw);\r\n\r\n    :disabled{\r\n        background-color: gray;\r\n        cursor: not-allowed;\r\n    }\r\n\r\n    border-radius: 0.5rem;\r\n    border:0.5px solid var(--brand-border-400);\r\n    transition: background 0.3s;\r\n    background-color: var(--body-bg);\r\n    cursor: pointer;\r\n    border: none;\r\n\r\n\r\n\r\n    ${(props)=>{\r\n        switch(props.mode){\r\n            case \"hero_btn\": return css`\r\n                padding:1rem 3rem;\r\n                /* height:unset; */\r\n                display:flex;\r\n                /* align-items:center;    //making text vertically center */\r\n                margin-top:3rem;\r\n                background-color: var(--brand);\r\n                font-weight:600;\r\n                box-shadow:0 0.2rem 0.2rem rgba(0, 0, 0, 0.3);\r\n                color: white;\r\n                box-shadow: var(--btn-shadow);\r\n            `\r\n\r\n            // case 'delete_note_btn': return css`\r\n            //     width:3rem;\r\n            //     display:flex;\r\n            //     align-items:center;\r\n            //     justify-content:center;\r\n            //     &::before{\r\n            //         content:'';\r\n            //         position:absolute;\r\n\r\n            //         background-image:${props.loader ? '' : 'url(\"./imgs/trash.png\")'};\r\n            //         background-repeat:no-repeat;\r\n            //         width:100%;\r\n            //         height:100%;\r\n            //         display:flex;\r\n            //         z-index:1;\r\n            //     }\r\n            // `\r\n            case 'toggle-nav-btn': return css`\r\n                margin-inline-start: auto;\r\n                z-index: 6;\r\n            `\r\n\r\n            case 'create_note_btn': return css`\r\n                background:var(--green);\r\n                color:hsl(0, 0%, 90%);\r\n                box-shadow:0 0.2rem 0.2rem rgba(0, 0, 0, 0.3);\r\n            `\r\n            case 'logout_btn': return css`\r\n                height:unset;\r\n            `\r\n            case 'login_form_btn': return css`\r\n                width:100%;\r\n                position: relative;\r\n                z-index: 2;\r\n                background-color: green;\r\n                color: white;\r\n                border: none;\r\n                height: 4rem;\r\n                /* &:before{\r\n                    content: '';\r\n                    position:absolute;\r\n                    left: 0;\r\n                    top: 0;\r\n                    height: 100%;\r\n                    width: 0px;\r\n                    transition: all 0.3s;\r\n                }\r\n                &:hover{\r\n                    color: white;\r\n                }\r\n                &:hover::before{\r\n                    width: 100%;\r\n                    background-color: var(--brand);\r\n                    z-index: -1;\r\n                } */\r\n            `\r\n        }\r\n    }}\r\n`"],"names":["ToggleThemeIcon","theme","useSelector","state","value","fill_color","useMemo","width","height","viewBox","fill","xmlns","d","fillRule","clipRule","memo","text","path","styles","children","to","style","Nav","cn","states","dispatch","useDispatch","useEffect","document","body","classList","toggle","localStorage","setItem","JSON","stringify","StyledNav","If","condition","user","email","Button","onClick","type","TOGGLE_THEME","styled","mode","isDisabled","StyledButton","className","disabled","props","css"],"sourceRoot":""}