{"version":3,"file":"static/js/notePage.8951a931.chunk.js","mappings":"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","sources":["Components/Journal Components/FormGroup/Form.group.tsx","Components/Journal Components/Loader.tsx","Components/PureComponents/Button.tsx","Components/PureComponents/Input.tsx","Components/PureComponents/Span.tsx","Components/PureComponents/Textarea.tsx","Components/PureComponents/Wrapper.tsx","Redux/hooks/useColorMenu.tsx","Utility/Utility Components/WithAuthUser.tsx","Utility/Utility Functions/ColorArr.tsx","Pages/Note/Color.box.tsx","Pages/Note/Color.list.tsx","Redux/hooks/useSearch.tsx","Utility/Hooks/useNote.click.listener.tsx","Utility/Hooks/useNoteFetch.tsx","Utility/Hooks/useTransformEditModal.tsx","Components/PureComponents/Heading/H4.tsx","Components/PureComponents/P.tsx","Pages/Note/Clr.icon.tsx","Pages/Note/Note.card.tsx","Pages/Note/Note.edit.moda.tsx","Utility/Hooks/useNoteOperations.tsx","Pages/Note/hooks/useDeleteBtn.handler.tsx","Pages/Note/hooks/useNoteUpdate.handler.tsx","Pages/Note/hooks/useModalEnable.handler.tsx","Pages/Note/Note.output.tsx","Pages/Note/Note.page.tsx","Redux/hooks/useTheme.tsx","Redux/hooks/useUser.tsx","Utility/Hooks/useClickListener.tsx","Utility/Hooks/useFetchUser.tsx","Components/PureComponents/Form.tsx","Components/Journal Components/FormGroup/Form.label.tsx","Utility/Hooks/useSubmit.tsx","Utility/Hooks/useForm.tsx","Utility/Hooks/useMediaQuery.tsx","Utility/Utility Components/If.tsx","Utility/Utility Components/withModalWrapper.tsx"],"sourcesContent":["import { Children, cloneElement, memo, useState } from \"react\"\r\nimport styled, { CSSProperties }  from \"styled-components\"\r\n\r\n\r\nconst FormGroup = ({children, styles}: {children: JSX.Element | JSX.Element[], styles?: CSSProperties}) => {\r\n    const [focus, setFocus] = useState(false)\r\n\r\n    return(\r\n        <StyledFormGroup style={styles}>\r\n            {\r\n                Children.map(children, (child:JSX.Element)=>{\r\n                    if(typeof child.type == 'string') return child\r\n                    return cloneElement(child, {focus, setFocus })\r\n                })\r\n            }\r\n        </StyledFormGroup>\r\n    )\r\n}\r\nexport default memo(FormGroup)\r\n\r\nconst StyledFormGroup = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    width:100%;\r\n    height: clamp(3.5rem ,3.8rem, 3.8vw);\r\n    position:relative;\r\n    margin-top:6rem;\r\n    background-color: var(--form-group-bg);\r\n    border-radius: 0.5rem;\r\n\r\n    div.utility.invalid, div.utility.focus-border{\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        pointer-events: none;\r\n        border-radius: 0.5rem;\r\n        border: 1px solid transparent;\r\n    }\r\n\r\n\r\n    /* giving margin on email form field */\r\n    &:nth-of-type(1){\r\n        margin-top:3rem;\r\n    }\r\n    div.svg-container{\r\n        height: 100%;\r\n        width: 4rem;\r\n        display: grid;\r\n        place-items: center;\r\n    }\r\n\r\n    label{\r\n        position:absolute;\r\n        transform: translateX(5rem);\r\n        pointer-events:none;\r\n        transition:transform 0.3s;\r\n    }\r\n    .transform{\r\n        transform:translate(1rem, -170%);\r\n    }\r\n\r\n\r\n    >input{\r\n        padding-inline-end: 1rem;\r\n        flex: 1;\r\n        height: 100%;\r\n        outline: none;\r\n        background-color: transparent !important;\r\n    }\r\n\r\n`","import { memo } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\n\r\ntype LoaderProps = {px?: number, py?: number, w?: number, h?: string}\r\n\r\nconst Loader = (props: LoaderProps) => {\r\n    const {py,px,w,h} = props\r\n\r\n   return(\r\n      <StyledLoader py={py} px={px} w={w} h={h}>\r\n         <div className=\"circle c1\"></div>\r\n         <div className=\"circle c2\"></div>\r\n      </StyledLoader>\r\n   )\r\n}\r\nexport default memo(Loader)\r\n\r\nconst StyledLoader = styled.div<{px?: number, py?: number, w?: number, h?: string}>`\r\n   height:100%;\r\n   position:relative;\r\n   display:flex;\r\n   align-items:center;\r\n   justify-content:center;\r\n   text-align:center;\r\n\r\n   .circle{\r\n      position:absolute;\r\n      width:${props=>props.w ? props.w : '2rem'};\r\n      height:${props=>props.h ? props.h : '2rem'};\r\n      border-radius:50%;\r\n      border:clamp(0.3rem, 0.5rem,0.5vw) solid transparent;\r\n      border-top-color:purple;\r\n      animation: animate_loaders 1s linear infinite;\r\n   }\r\n\r\n   .c2{\r\n      border-bottom-color: red;\r\n      border-top-color:transparent;\r\n   }\r\n\r\n\r\n   @keyframes animate_loaders{\r\n      0%{\r\n         border-width: clamp(0.3rem, 0.5rem, 0.5vw);\r\n         transform: rotate(0);\r\n      }50%{\r\n         border-width: clamp(0.1rem,0.2rem,0.2vw);\r\n         transform: rotate(180deg);\r\n      }100%{\r\n         border-width: clamp(0.3rem, 0.5rem, 0.5vw);\r\n         transform: rotate(360deg);\r\n      }\r\n   }\r\n`","import { ActionCreatorWithoutPayload } from \"@reduxjs/toolkit\";\r\nimport { CSSProperties, memo, ReactNode } from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\nimport If from \"../../Utility/Utility Components/If\"\r\nimport Loader from \"../Journal Components/Loader\"\r\n\r\ninterface PropType {\r\n    children?: JSX.Element | JSX.Element[] | string | ReactNode,\r\n    cn?: string,\r\n    onClick?:\r\n    (() => Promise<void>) |\r\n    (() => {\r\n        type: ActionCreatorWithoutPayload<string>;\r\n    } | void) |\r\n    (() => { payload: undefined; type: string; }) |\r\n    any,\r\n\r\n    mode?: BtnMode,\r\n    isDisabled?: boolean,\r\n    loader?: boolean,\r\n    style?: CSSProperties,\r\n    redirect_text?: string\r\n}\r\n\r\nconst Button = (props: PropType) => {\r\n    const {children, cn, onClick, mode, isDisabled, loader, style} = props\r\n\r\n\r\n    return(\r\n        <StyledButton className={cn} onClick={onClick} mode={mode} disabled={isDisabled} style={style}>\r\n            <If condition={loader}> <Loader /> </If>\r\n            <If condition={!loader && props.redirect_text}> {props.redirect_text} </If>\r\n            <If condition={!loader}> {children} </If>\r\n        </StyledButton>\r\n    )\r\n}\r\nexport default memo(Button)\r\n\r\n\r\n\r\nconst StyledButton = styled.button<{mode?: BtnMode}>`\r\n    text-decoration: none;\r\n    padding: clamp(0.3rem, 0.4rem, 0.4vw) clamp(0.7rem, 0.9rem, 0.9vw);\r\n    display: grid;\r\n    place-items: center;\r\n\r\n    :disabled{\r\n        background-color: #424242;\r\n        cursor: not-allowed;\r\n        border: none;\r\n        /* color: ; */\r\n        color: #979797;\r\n        /* width: 100%; */\r\n    }\r\n\r\n\r\n    transition: background 0.3s;\r\n    background-color: var(--body-bg);   // for theme-toggling button\r\n    cursor: pointer;\r\n    border: none;\r\n\r\n\r\n\r\n    ${(props)=>{\r\n        switch(props.mode){\r\n            case \"hero_btn\": return css`\r\n                padding:1rem 3rem;\r\n                /* height:unset; */\r\n                display:flex;\r\n                /* align-items:center;    //making text vertically center */\r\n                margin-top:3rem;\r\n                background-color: var(--brand);\r\n                font-weight:600;\r\n                box-shadow:0 0.2rem 0.2rem rgba(0, 0, 0, 0.3);\r\n                color: white;\r\n                box-shadow: var(--btn-shadow);\r\n            `\r\n\r\n            // case 'delete_note_btn': return css`\r\n            //     width:3rem;\r\n            //     display:flex;\r\n            //     align-items:center;\r\n            //     justify-content:center;\r\n            //     &::before{\r\n            //         content:'';\r\n            //         position:absolute;\r\n\r\n            //         background-image:${props.loader ? '' : 'url(\"./imgs/trash.png\")'};\r\n            //         background-repeat:no-repeat;\r\n            //         width:100%;\r\n            //         height:100%;\r\n            //         display:flex;\r\n            //         z-index:1;\r\n            //     }\r\n            // `\r\n            case 'toggle-nav-btn': return css`\r\n                margin-inline-start: auto;\r\n                z-index: 6;\r\n            `\r\n\r\n            case 'create_note_btn': return css`\r\n                background:var(--success-400);\r\n                /* color:hsl(0, 0%, 90%); */\r\n                /* box-shadow:0 0.2rem 0.2rem rgba(0, 0, 0, 0.3); */\r\n            `\r\n            case 'logout_btn': return css`\r\n                height:unset;\r\n            `\r\n            case 'login_form_btn': return css`\r\n                width:100%;\r\n                position: relative;\r\n                z-index: 2;\r\n                background-color: green;\r\n                color: white;\r\n                border: none;\r\n                height: 4rem;\r\n                /* &:before{\r\n                    content: '';\r\n                    position:absolute;\r\n                    left: 0;\r\n                    top: 0;\r\n                    height: 100%;\r\n                    width: 0px;\r\n                    transition: all 0.3s;\r\n                }\r\n                &:hover{\r\n                    color: white;\r\n                }\r\n                &:hover::before{\r\n                    width: 100%;\r\n                    background-color: var(--brand);\r\n                    z-index: -1;\r\n                } */\r\n            `\r\n        }\r\n    }}\r\n`","import { ChangeEvent, CSSProperties, Dispatch, memo, SetStateAction, useCallback } from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\n\r\ntype Mode = 'search_bar'| any\r\n\r\nconst Input = ( props: {\r\n    type?: 'password' | 'text' | 'email',\r\n    value?: string,\r\n    onChange: (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void,\r\n    setFocus?: Dispatch<SetStateAction<boolean>>,\r\n    name?: string,\r\n    id?: string,\r\n    placeholder?: string,\r\n    styles?: CSSProperties,\r\n    mode?: Mode\r\n}) => {\r\n\r\n    const handleFocus = useCallback(()=> props.setFocus?.(true) , [props.setFocus])\r\n    const handleBlur = useCallback((e)=> props.setFocus?.(e.target.value.length > 0 ) , [props.setFocus])\r\n\r\n    return(\r\n        <StyledInput {...props} onFocus={handleFocus} onBlur={handleBlur}/>\r\n    )\r\n}\r\nexport default memo(Input)\r\n\r\n\r\n\r\nconst StyledInput = styled.input<{mode?: Mode}>`\r\n    height: clamp(3.5rem, 3.5rem, 3.5vw);\r\n    padding-inline: 1rem;\r\n\r\n\r\n    &:focus + div.utility.focus-border{\r\n        /* background-color: var(--input-focus-bg); */\r\n        outline: 1px solid var(--outline);\r\n    }\r\n\r\n    /* ${({mode}) => {\r\n        if(mode == 'search_bar'){\r\n            return css`\r\n            /* height: inherit; */\r\n            `\r\n        }\r\n    }} */\r\n\r\n\r\n    /* &:invalid + div.invalid{\r\n        border-color: var(--dan-200);\r\n    }\r\n\r\n\r\n    &:valid + div.invalid{\r\n        border-color: var(--success-300);\r\n    } */\r\n`","import { CSSProperties, memo, ReactNode } from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\n\r\nconst Span = ({children, style, cn, bg}: SpanPropType) => {\r\n    const bg_clr = bg ? `#${Math.random().toString(16).slice(2,8)}` : ''\r\n\r\n    return <StyledSpan style={style} className={cn} bg_clr={bg_clr} >{children}</StyledSpan>\r\n}\r\nexport default memo(Span)\r\n\r\n\r\ninterface SpanPropType {\r\n    children?: ReactNode\r\n    style?: CSSProperties,\r\n    cn?: string,\r\n    bg?: boolean\r\n}\r\n\r\nconst StyledSpan = styled.span<{bg_clr?: string}>`\r\n\r\n${({bg_clr}) => {\r\n    if(bg_clr){\r\n        return css`\r\n            background: ${bg_clr};\r\n        `\r\n    }\r\n}}\r\n\r\n`","import { ChangeEvent, Dispatch, memo, SetStateAction, useCallback } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\n\r\nconst Textarea = (props: {\r\n    value?: string,\r\n    onChange: (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void,\r\n    setFocus?: Dispatch<SetStateAction<boolean>>,\r\n    name?: string,\r\n    id?: string,\r\n    placeholder?: string\r\n}) => {\r\n\r\n    const handleFocus = useCallback(()=>{\r\n        props.setFocus && props.setFocus(true)\r\n    } , [props.setFocus])\r\n\r\n    const handleBlur = useCallback((e)=>{\r\n        props.setFocus && props.setFocus(e.target.value.length>0 )\r\n    } , [props.setFocus])\r\n\r\n    return(\r\n        <StyledTextArea {...props} onFocus={handleFocus} onBlur={handleBlur}/>\r\n        // <StyledTextArea value={value} onChange={onChange} onFocus={handleFocus} onBlur={handleBlur} name={name} id={id} placeholder={placeholder}/>\r\n    )\r\n}\r\nexport default memo(Textarea)\r\n\r\n\r\n\r\nconst StyledTextArea = styled.textarea`\r\n    font-size: 1.6rem;\r\n    padding-inline: 1rem;\r\n    background: var(--input-bg);\r\n    border: none;\r\n    border-radius: 0.5rem;\r\n\r\n    &:focus{\r\n        /* background-color: var(--input-focus-bg); */\r\n    }\r\n\r\n    /* &:invalid + div.invalid{\r\n        border-color: var(--dan-200);\r\n    }\r\n\r\n\r\n    &:valid + div.invalid{\r\n        border-color: var(--success-300);\r\n    } */\r\n`","import { memo, ReactNode, CSSProperties } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype ModeTypes =\r\n    | 'edit_note' | 'note_output' | 'hero'\r\n    | 'create_note_container' | 'notes-output-section' | 'notes_container' | 'sign_form_container'\r\n\r\n\r\ntype WrapperProps = {\r\n    children: ReactNode,\r\n    styles?: CSSProperties,\r\n    mode?: ModeTypes,\r\n    cn?: string\r\n}\r\n\r\n\r\nconst Wrapper = (props : WrapperProps)=>{\r\n    const {children, styles, mode, cn} = props\r\n\r\n    return (\r\n        <StyledWrapper mode={mode} style={styles} className={(mode ? mode : '')+\" \"+(cn ? cn : '')}>\r\n            {children}\r\n        </StyledWrapper>\r\n    )\r\n}\r\nexport default memo(Wrapper)\r\n\r\n\r\n\r\nconst StyledWrapper = styled.section<{mode?:ModeTypes}>`\r\n    display:flex;\r\n    overflow:hidden;\r\n    position:relative;\r\n    padding:2rem;\r\n    --width: 30rem;\r\n\r\n    ${(props)=>{\r\n        switch(props.mode){\r\n\r\n            case \"create_note_container\": return css`\r\n                flex-direction: column;\r\n                margin-bottom:3rem;\r\n                input{\r\n                    margin-block-end: 2rem;\r\n                }\r\n                textarea{\r\n                    height: 60%;\r\n                    resize: none;\r\n                    margin-block-end: 3rem;\r\n                    @media (max-width: 700px){\r\n                        height: 15rem;\r\n                    }\r\n                }\r\n\r\n                @media (min-width:700px){\r\n                    height:100%;\r\n                    position:fixed;\r\n                    border-right: 1px solid var(--brand-border-200);\r\n                }\r\n            `\r\n            case 'sign_form_container': return css`\r\n                background-color: var(--form-bg);\r\n                box-shadow: var(--form-shadow);\r\n                border-radius: 0.5rem;\r\n                transform: translateY(3rem);\r\n\r\n                @media (max-width: 700px){\r\n                    form{\r\n                        padding-inline: unset;\r\n                    }\r\n                }\r\n\r\n\r\n                @media (min-width: 700px){\r\n                    display: flex;\r\n                    max-width: 70rem;\r\n                    padding-inline: 2rem;\r\n                    margin-inline: auto;\r\n                }\r\n            `\r\n\r\n            case 'notes-output-section': return css`\r\n                gap: 2rem;\r\n                flex-wrap: wrap;\r\n\r\n                @media (min-width:700px){\r\n                    position:relative;\r\n                    left:var(--width);\r\n                    width:calc(100% - var(--width));\r\n                    justify-content: space-around;\r\n                }\r\n            `\r\n\r\n            case 'notes_container': return css`\r\n                justify-content:center;\r\n                gap:3rem;\r\n                padding:2rem;\r\n                flex-wrap:wrap;\r\n                @media (min-width:700px){\r\n                    justify-content:space-around;\r\n                }\r\n            `\r\n            case 'edit_note': return css`\r\n                position:fixed;\r\n                inset:0;\r\n                background: rgba(0,0,0, 0.5);\r\n            `\r\n            default: return css`\r\n            `\r\n        }\r\n    }}\r\n\r\n    img{\r\n        display:flex;\r\n        width:clamp(23rem, 28rem, 28vw);\r\n        height:clamp(28rem, 32rem, 32vw);\r\n        transform:rotate(-20deg) scale(0.8);\r\n        transform-origin:center;\r\n    }\r\n`\r\n\r\n\r\n// case 'hero': return css`\r\n//                 width:100%;\r\n//                 align-items:center;\r\n//                 justify-content:center;\r\n//                 transform-origin:center;\r\n//                 flex-direction:column;\r\n//                 text-align:center;\r\n//                 padding:2rem;\r\n//                 /* animation the every children in hero section */\r\n//                 @keyframes animateLoad {\r\n//                     0%{\r\n//                         transform: rotate(15deg) translateY(300%) scale(0.9);\r\n//                         opacity: 0;\r\n//                     }\r\n//                     70%{\r\n//                         transform: rotate(0) translateY(-50%) scale(1.1);\r\n//                     }\r\n//                     100%{ }\r\n//                 }\r\n//                 @media (min-width:700px){\r\n//                     width:50%;\r\n//                 }\r\n//             `","import { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst useColorMenu = () => {\r\n    const color_menu = useSelector((state: ColorMenu) => state.color_menu)\r\n    const dispatch = useDispatch()\r\n    return {color_menu, dispatch}\r\n}\r\nexport default useColorMenu","import { memo, useCallback, useEffect, useMemo, useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport useUser from \"../../Redux/hooks/useUser\"\r\nimport useFetchUser from \"../Hooks/useFetchUser\"\r\n\r\nconst WithAuthUser = (props: {children: JSX.Element}) => {\r\n    const navigate = useNavigate()\r\n    const {user} = useUser()\r\n\r\n    const isLoggedIn = useMemo(() => !(!!user.email), [user.email])\r\n    const [shouldRedirectToLogin] = useFetchUser({shouldCheckIfUserLogged: isLoggedIn})\r\n    const redirectToLogin = useCallback(() => navigate('/login'), [])\r\n\r\n    useEffect(() => {\r\n        if(shouldRedirectToLogin){\r\n            redirectToLogin()\r\n        }\r\n    }, [shouldRedirectToLogin])\r\n\r\n\r\n\r\n\r\n    return (<>{props.children}</>)\r\n}\r\nexport default memo(WithAuthUser)","const ColorsArr:any = [\r\n    {white:['#fff', '#000']},\r\n    {green:['hsl(146, 85%, 75%)','hsl(146, 85%, 15%)']},\r\n    {yellow:['hsl(58, 85%, 75%)','hsl(58, 85%, 15%)']},\r\n    {purple:['hsl(276, 85%, 75%)','hsl(276, 85%, 15%)']},\r\n    {red:['hsl(348, 85%, 75%)','hsl(348, 85%, 15%)']}\r\n ]\r\n\r\n export default ColorsArr","import { memo, useCallback } from \"react\"\r\nimport useTheme from \"../../Redux/hooks/useTheme\"\r\n\r\n\r\n\r\nconst ColorBox = ({clr, handleClick}:{clr:any, handleClick: (e: any, color:string, clr:any) => Promise<void>})=>{\r\n    const {theme} = useTheme()\r\n    const color = clr[Object.keys(clr)[0]][theme ? 1 : 0]\r\n    const handleColorSubmit = useCallback((e:any) => handleClick(e, color, clr), [clr, color, handleClick])\r\n\r\n    return <div style={{background:color,width:'3rem',height:'3rem',borderRadius:'50%'}}  onClick={handleColorSubmit}></div>\r\n}\r\n\r\nexport default memo(ColorBox)","import { CSSProperties, memo, useCallback } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport ColorsArr from \"../../Utility/Utility Functions/ColorArr\"\r\nimport ColorBox from \"./Color.box\"\r\nimport useColorMenu from \"../../Redux/hooks/useColorMenu\"\r\nimport WithModalWrapper from \"../../Utility/Utility Components/withModalWrapper\"\r\nimport { setOnlyBg } from \"../../Redux/slices/color.menu.slice\"\r\nimport { changeNoteColor } from \"../../Redux/slices/user.slice\"\r\n\r\n\r\n\r\nconst ColorList = ({ styles }:{ styles?:CSSProperties})=>{\r\n   const {color_menu, dispatch} = useColorMenu()\r\n\r\n   const handleClick = useCallback(async(e, color:string, clr) =>{\r\n      e.stopPropagation()\r\n      if(!color_menu?.item) return         //if note edit mode enabled then return\r\n      if(color_menu.item.bg.includes(color)) return      //if user sets the color which is already setted then return\r\n\r\n      const change_clr_url = new Request(\r\n         process.env.NODE_ENV == 'development'\r\n            ? `${process.env.REACT_APP_DEV_NOTE_CHANGE_CLR!}${color_menu.item._id}`\r\n            :  `${process.env.REACT_APP_PROD_NOTE_CHANGE_CLR!}${color_menu.item._id}`\r\n      )\r\n      const res = await fetch(change_clr_url, {\r\n         credentials: 'include',\r\n         method: 'PATCH',\r\n         body: JSON.stringify( { bg: clr[Object.keys(clr)[0]]} ),\r\n         headers: { 'Content-Type': 'application/json'},\r\n      })\r\n      const data = await res.json()\r\n      if(data.success){\r\n         dispatch(changeNoteColor({bg: clr[Object.keys(clr)[0]], _id: color_menu.item._id}))\r\n         dispatch(setOnlyBg(clr[Object.keys(clr)[0]]))\r\n      }\r\n   }, [color_menu ])\r\n\r\n\r\n   return(\r\n       <WithModalWrapper>\r\n        <StyledColorList className=\"clr-list\" style={styles}>\r\n            { ColorsArr.map((clr:any, i:number) => <ColorBox key={i}  clr={clr} handleClick={handleClick} /> )}\r\n        </StyledColorList>\r\n       </WithModalWrapper>\r\n   )\r\n}\r\nexport default memo(ColorList)\r\n\r\n\r\n\r\nconst StyledColorList = styled.div`\r\n   display:flex;\r\n   position:fixed;\r\n   flex-direction:row;\r\n   align-items:center;\r\n   justify-content:space-between;\r\n   gap:1rem;\r\n   z-index:3;\r\n   >div{\r\n      cursor:pointer;\r\n   }\r\n`","import { useDispatch, useSelector } from \"react-redux\"\r\n\r\ninterface ISearch{\r\n    search: {value: string}\r\n}\r\n\r\nconst useSearch = () => {\r\n    const search = useSelector((state: ISearch) =>  state.search.value)\r\n    const dispatch = useDispatch()\r\n\r\n    return {search, dispatch}\r\n\r\n}\r\nexport default useSearch","import { useEffect, useRef } from \"react\"\r\n\r\nconst useNoteClickListener = (props:{\r\n    handler: any,\r\n    eventName?: 'click',\r\n    element?: Element | null | Window & typeof globalThis | Document,\r\n    run?: boolean\r\n}) => {\r\n    const {eventName = 'click', handler, element = window, run = false} = props\r\n\r\n    const handlerRef = useRef(handler)\r\n    useEffect(() => {\r\n        handlerRef.current = handler\r\n    }, [handler])\r\n\r\n\r\n    useEffect(()=>{\r\n        const eventListener = (e:Event | any ) => {\r\n            // handlerRef.current(e)\r\n            handler(e)\r\n        }\r\n\r\n\r\n        if(run){\r\n            element?.addEventListener(eventName, eventListener, false)\r\n        }else{\r\n            element?.removeEventListener(eventName, eventListener, false)\r\n        }\r\n        return () => {\r\n            element?.removeEventListener(eventName, eventListener, false)\r\n        }\r\n    }, [eventName, element, run])\r\n\r\n}\r\nexport default useNoteClickListener","import { useCallback, useEffect, useState } from \"react\"\r\nimport useUser from \"../../Redux/hooks/useUser\"\r\nimport { setNote } from \"../../Redux/slices/user.slice\"\r\n\r\nconst useNoteFetch = () => {\r\n    const {dispatch} = useUser()\r\n\r\n    const handleFetchNotes = useCallback(async() => {\r\n        const note_fetch_url = new Request(process.env.NODE_ENV == 'development' ? process.env.REACT_APP_DEV_NOTE_FETCH! : process.env.REACT_APP_PROD_NOTE_FETCH! )\r\n        const res = await fetch(note_fetch_url, {method:'get', credentials: 'include', headers:{\r\n            'Content-Type': 'application/json'\r\n        }})\r\n        const data = await res.json()\r\n        if(data.notes){\r\n            dispatch(setNote(data.notes))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        handleFetchNotes()\r\n    }, [])\r\n}\r\nexport default useNoteFetch","import { useCallback, useEffect, useRef } from \"react\"\r\nimport '../../Styles/expand-to-center.css'\r\n\r\nconst useTranformEditModal = ({note_id}: {note_id: string}) => {\r\n    const ref_id = useRef(note_id)\r\n    const modal_ref = useRef<HTMLDivElement>()\r\n    const element_ref = useRef<HTMLDivElement>()\r\n\r\n    useEffect(() => {\r\n        ref_id.current = note_id\r\n    }, [note_id])\r\n\r\n    const enableEditModal = useCallback((_id:string) =>{\r\n        const modal = document.getElementById('modal') as HTMLDivElement\r\n        const element = document.getElementById(_id) as HTMLDivElement\r\n\r\n        modal_ref.current = modal\r\n        modal_ref.current.id = _id\r\n        element_ref.current = element\r\n\r\n        element.style.opacity = '0'\r\n\r\n        const {top, left, width, height} = element.getBoundingClientRect()\r\n\r\n        modal.style.setProperty('--top', top+'px')\r\n        modal.style.setProperty('--left', left+'px')\r\n        modal.style.setProperty('--width', width+'px')\r\n        modal.style.setProperty('--height', height+'px')\r\n        modal.style.setProperty('--display', 'flex')\r\n\r\n        setTimeout(() => {\r\n            document.body.classList.add('relative')\r\n            modal.classList.add('expand-to-center')\r\n        },100)\r\n    }, [])\r\n\r\n    const disableEditModal = useCallback(() => {\r\n        document.body.classList.remove('relative')\r\n        modal_ref.current?.classList.remove('expand-to-center')\r\n        setTimeout(() => {\r\n            if(element_ref.current){\r\n                element_ref.current.style.opacity = '1'\r\n            }\r\n            }, 250)\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        note_id && setTimeout(() => enableEditModal(ref_id.current))\r\n        !note_id && setTimeout(() => disableEditModal())\r\n    },[note_id, enableEditModal])\r\n}\r\n\r\nexport default useTranformEditModal","import { Children, memo, ReactNode } from \"react\";\r\nimport styled, { CSSProperties } from \"styled-components\";\r\n\r\nconst H4 = memo(({children, styles, handleClick, cn}:{children:ReactNode, styles?:CSSProperties, handleClick?:() =>void, cn?:string})=>{\r\n    return(\r\n        <StyledH4 style={styles} onClick={handleClick} className={cn}>{children}</StyledH4>\r\n    )\r\n})\r\nexport default H4\r\n\r\nconst StyledH4 = styled.h4<{styles?:CSSProperties}>`\r\n    font-size:1.6rem;\r\n`","import { ReactNode } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Para = ({children, cn}: {children?: ReactNode, cn?: string}) => {\r\n    return (<StyledP className={cn}>{children}</StyledP>)\r\n}\r\nexport default Para\r\n\r\nconst StyledP = styled.p`\r\n    margin: 0;\r\n    font-weight: 500;\r\n`","import useTheme from \"../../Redux/hooks/useTheme\"\r\n\r\n\r\nconst Clr = () =>{\r\n    const {theme} = useTheme()\r\n\r\n    return (\r\n        <div>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill={theme ? 'hsl(0, 0%, 80%)' : 'hsl(0, 0%, 10%)'}>\r\n                <path d=\"M12 22C6.49 22 2 17.51 2 12S6.49 2 12 2s10 4.04 10 9c0 3.31-2.69 6-6 6h-1.77c-.28 0-.5.22-.5.5 0 .12.05.23.13.33.41.47.64 1.06.64 1.67A2.5 2.5 0 0 1 12 22zm0-18c-4.41 0-8 3.59-8 8s3.59 8 8 8c.28 0 .5-.22.5-.5a.54.54 0 0 0-.14-.35c-.41-.46-.63-1.05-.63-1.65a2.5 2.5 0 0 1 2.5-2.5H16c2.21 0 4-1.79 4-4 0-3.86-3.59-7-8-7z\"/>\r\n                <circle cx=\"6.5\" cy=\"11.5\" r=\"1.5\"/>\r\n                <circle cx=\"9.5\" cy=\"7.5\" r=\"1.5\"/>\r\n                <circle cx=\"14.5\" cy=\"7.5\" r=\"1.5\"/>\r\n                <circle cx=\"17.5\" cy=\"11.5\" r=\"1.5\"/>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\nexport default Clr","import parse from \"html-react-parser\";\r\nimport { CSSProperties, lazy, memo, MouseEvent, useCallback, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../../Components/PureComponents/Button\";\r\nimport H4 from \"../../Components/PureComponents/Heading/H4\";\r\nimport Para from \"../../Components/PureComponents/P\";\r\nimport Span from \"../../Components/PureComponents/Span\";\r\nimport Wrapper from \"../../Components/PureComponents/Wrapper\";\r\nimport { INote } from \"../../Inote\";\r\nimport useColorMenu from \"../../Redux/hooks/useColorMenu\";\r\nimport useSearch from \"../../Redux/hooks/useSearch\";\r\nimport { setColorMenu } from \"../../Redux/slices/color.menu.slice\";\r\nimport useMediaQuery from \"../../Utility/Hooks/useMediaQuery\";\r\nimport If from \"../../Utility/Utility Components/If\";\r\nimport WithSuspense from \"../../Utility/Utility Components/WithSuspense\";\r\nimport Clr from \"./Clr.icon\";\r\nconst OverlayMenu = lazy(() => import('./Overlay.menu' /* webpackChunkName: 'Overlay menu' */))\r\n\r\n\r\nexport interface INoteCard {\r\n    note: INote,\r\n    styles?: CSSProperties,\r\n    mode?: | 'note-page' | 'recycle-page',\r\n    isVisible?: boolean\r\n}\r\n\r\nconst NoteCard = (props: INoteCard)=>{\r\n    const {note, styles, mode = 'note-page'} = props\r\n\r\n    const {color_menu, dispatch} = useColorMenu()\r\n    const [isLargerThan750] = useMediaQuery({width: 750})\r\n    const [isOverlayMenuVisibile, setIsOverlayMenuVisibile] = useState(false)\r\n\r\n\r\n    const setOverlayMenuTrue = useCallback(() => isLargerThan750 && setIsOverlayMenuVisibile(true), [isLargerThan750])\r\n    const setOverlayMenuFalse = useCallback(() => isLargerThan750 && setIsOverlayMenuVisibile(false), [isLargerThan750])\r\n\r\n    const toggleColorMenu = useCallback((e: MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        const {top, left} = e.currentTarget.getBoundingClientRect()\r\n        dispatch(setColorMenu({\r\n            enable: !color_menu.enable,\r\n            item: {_id: note._id, bg: note.bg!},\r\n            position:{top:top+20+'px', left:left+20+'px'}\r\n        }))\r\n    }, [])\r\n\r\n    const [marked_note, setMarkedNote] = useState({title: '', body: ''})\r\n    const {search} = useSearch()\r\n    const [isVisible, setIsVisible] = useState(props.isVisible && search != undefined)\r\n\r\n    useEffect(() => {\r\n        if(search != undefined && props.isVisible){\r\n            setIsVisible(true)\r\n            const obj = {\r\n                title: `${note.title.replace(search, `<mark style=\"color: black\">${search}</mark>`)}`,\r\n                body: `${note.body.replace(search, `<mark style=\"color: black;\">${search}</mark>`)}`\r\n            }\r\n            setMarkedNote(obj)\r\n        }else{\r\n            setMarkedNote({title: '', body: ''})\r\n            setIsVisible(false)\r\n        }\r\n    }, [props.isVisible, search])\r\n\r\n\r\n\r\n    return(\r\n        <StyledNote id={note._id} style={styles} className=\"note\" onMouseEnter={setOverlayMenuTrue} onMouseLeave={setOverlayMenuFalse}>\r\n\r\n            <Wrapper styles={{padding: '0.5rem 1rem',borderBottom:'1px solid var(--border)'}} >\r\n                <Span cn='random-span' bg={true}/>\r\n                <H4 styles={{width:'100%',margin: 0,textAlign:'center'}} cn='note-title' >\r\n                    <If condition={!isVisible}>\r\n                        {note.title}\r\n                    </If>\r\n                    <If condition={isVisible}>\r\n                        {parse(marked_note.title)}\r\n                    </If>\r\n                </H4>\r\n            </Wrapper>\r\n\r\n            <Wrapper styles={{overflow:'hidden',flex:'1', padding:'0.5rem 1rem'}}>\r\n                <Para cn='note-body' >\r\n                    <If condition={!isVisible}>\r\n                        {note.body}\r\n                    </If>\r\n                    <If condition={isVisible}>\r\n                        {parse(marked_note.body)}\r\n                    </If>\r\n                </Para>\r\n            </Wrapper>\r\n\r\n            <If condition={!isLargerThan750 || isOverlayMenuVisibile}>\r\n                <WithSuspense Comp={() =>(\r\n                    <OverlayMenu cn={`note-overlay ${mode == 'recycle-page' ? 'recycle-overlay' : \"\"}`}>\r\n                        <If condition={mode == 'note-page'}>\r\n                            <Button style={{backgroundColor: 'transparent'}} onClick={toggleColorMenu}><Clr /></Button>\r\n                            <Button mode='delete_note_btn' cn='note-delete-btn'>delete</Button>\r\n                        </If>\r\n                    </OverlayMenu>)\r\n                }/>\r\n            </If>\r\n        </StyledNote>\r\n    )\r\n}\r\nexport default memo(NoteCard)\r\n\r\n\r\n\r\nconst StyledNote = styled.div`\r\n    position:relative;\r\n    width: 100%;\r\n    height:20rem;\r\n    box-shadow:0 0.2rem 0.2rem rgba(0,0,0,0.2);\r\n    border-radius:0 0.5rem 0.5rem 0;\r\n    display:flex;\r\n    --direction: column;\r\n    flex-direction: var(--direction);\r\n    --note-menu-opacity:0;\r\n    /* animation:animate_note calc(0.3s  * var(--note-order)) ease-in; */\r\n\r\n    @media (min-width:700px){\r\n        max-width:40rem;\r\n    }\r\n\r\n\r\n    p{\r\n        opacity:0.9;\r\n        white-space:pre-line;\r\n        word-break:break-all;\r\n        width:100%;\r\n    }\r\n\r\n    /* random span at the left top of the note */\r\n    span.random-span{\r\n        position:absolute;\r\n        top:0;left:0;\r\n        width:5rem;\r\n        height:5rem;\r\n        border-radius:50%;\r\n        transform:translate(-50%, -50%);\r\n    }\r\n\r\n   span{\r\n        pointer-events: none;\r\n    }\r\n\r\n    @media (max-width:700px){\r\n        .overlay-menu{\r\n            display:none;\r\n        }\r\n        /* for bin page */\r\n        .bin-note-menu{\r\n            display:flex;\r\n        }\r\n    }\r\n\r\n    /* making the permanent delete and restore btn visible in bin page for every note */\r\n    .bin-note-menu{\r\n        --note-menu-opacity:1;\r\n    }\r\n    @media (min-width:700px){\r\n        --note-menu-opacity:0;\r\n        transition:all 0.3s;\r\n\r\n        div.overlay-menu {\r\n            height:4rem;\r\n            width:100%;\r\n            display:flex;\r\n            opacity:var(--note-menu-opacity);\r\n            pointer-events:none;\r\n        }\r\n        &:hover{\r\n            --note-menu-opacity:1;\r\n            div.overlay-menu{\r\n                pointer-events:all;\r\n            }\r\n        }\r\n    }\r\n\r\n    @keyframes animate_note{\r\n        0%{\r\n            transform: scale(0.8);\r\n            animation-timing-function: ease;\r\n        }\r\n        30%{\r\n            animation-timing-function: ease-in;\r\n            opacity: 1;\r\n            transform: scale(1.1);\r\n        }\r\n        60%{\r\n            animation-timing-function: ease-in;\r\n            transform: scale(0.9);\r\n        }\r\n        100%{  }\r\n}\r\n`","import { memo, ReactNode } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n// import Button from \"../../Components/PureComponents/Button\";\r\nimport { INote } from \"../../Inote\";\r\n// import useColorMenu from \"../../Redux/hooks/useColorMenu\";\r\nimport useTheme from \"../../Redux/hooks/useTheme\";\r\n// import { setColorMenu } from \"../../Redux/slices/color.menu.slice\";\r\nimport WithModalWrapper from \"../../Utility/Utility Components/withModalWrapper\";\r\n// import Clr from \"./Clr.icon\";\r\n// import OverlayMenu from \"./Overlay.menu\";\r\n\r\n\r\nconst EditModal = memo(({children, mode, bg, noteToBeEdited}:{\r\n    children:ReactNode,\r\n    mode?:string,\r\n    bg: string[],\r\n    noteToBeEdited: INote\r\n})=>{\r\n    const {theme, dispatch} = useTheme()\r\n    // const {color_menu} = useColorMenu()\r\n\r\n    // const toggleColorMenu = useCallback((e: MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    //     const {top, left} = e.currentTarget.getBoundingClientRect()\r\n    //     dispatch(setColorMenu({\r\n    //         enable: !color_menu.enable,\r\n    //         item: {_id: noteToBeEdited._id, bg: noteToBeEdited.bg!},\r\n    //         position:{top:top+20+'px', left:left+20+'px'}\r\n    //     }))\r\n    // }, [])\r\n\r\n    return(\r\n        <WithModalWrapper>\r\n            <StyledEditModal mode={mode} id='modal' className=\"edit-modal\" style={{background: theme ? bg[1] : bg[0], border:'var(--border)'}}>\r\n                {children}\r\n                {/* <OverlayMenu cn={`note-overlay`}>\r\n                        <Button style={{backgroundColor: 'transparent'}} onClick={toggleColorMenu}><Clr /></Button>\r\n                        <Button mode='delete_note_btn' cn='note-delete-btn'>delete</Button>\r\n                    </OverlayMenu> */}\r\n            </StyledEditModal>\r\n        </WithModalWrapper>\r\n    )\r\n})\r\nexport default EditModal\r\n\r\n\r\nconst StyledEditModal = styled.form<{mode?:string}>`\r\n    transition:all 0.3s ease;\r\n\r\n    display: var(--display, none);\r\n    top: var(--top, unset);\r\n    left: var(--left, unset);\r\n    width: var(--width, unset);\r\n    height: var(--height, unset);\r\n    transform: var(--transform, unset);\r\n    max-width:50rem;\r\n    max-height: 50rem;\r\n\r\n\r\n    ${(props)=>{\r\n        switch(props.mode){\r\n            case 'edit_note': return css`\r\n                textarea, input{\r\n                    width:100%;\r\n                    background-color: unset;\r\n                    &:focus{\r\n                        outline: none;\r\n                        background-color: inherit;\r\n                    }\r\n                }\r\n                input{\r\n                    text-align: center;\r\n                    /* font-weight: 600 !important; */\r\n                    color: var(--clr);\r\n                    border-bottom: 1px solid var(--border);\r\n                }\r\n                textarea{\r\n                    flex: 1;\r\n                    resize: none;\r\n                    font-weight: 500;\r\n                }\r\n                flex-direction:column;\r\n                position:absolute;\r\n                align-items:center;\r\n                background:var(--edit-modal-bg);\r\n                border-radius:0.5rem;\r\n            `\r\n        }\r\n    }}\r\n`","import { useCallback } from \"react\"\r\n\r\nconst useNoteOperations = () => {\r\n\r\n    const handleDeleteNote = useCallback(async(id: string) => {\r\n        try{\r\n            const delete_note_url = new Request(process.env.NODE_ENV == 'development' ? `${process.env.REACT_APP_DEV_NOTE_DELETE!}${id}` :`${process.env.REACT_APP_PROD_NOTE_DELETE!}${id}` )\r\n\r\n            const res = await fetch( delete_note_url, {\r\n                credentials: 'include', body: JSON.stringify({BIN: true}),\r\n                method:'delete',\r\n                headers: {'content-type': 'application/json'}\r\n            })\r\n            const data = await res.json()\r\n            return await data.success\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }, [])\r\n\r\n    const handleUpdateNote = useCallback( async(update_note: Record<any, any>) => {\r\n        try {\r\n            const update_note_url = new Request(process.env.NODE_ENV == 'development' ? `${process.env.REACT_APP_DEV_NOTE_UPDATE!}${update_note._id}` :`${process.env.REACT_APP_PROD_NOTE_UPDATE!}${update_note._id}` )\r\n\r\n            const res = await fetch(update_note_url, {\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify(update_note),\r\n                credentials: 'include',\r\n                method: 'PATCH'\r\n            })\r\n            const data = await res.json()\r\n            return await data.success\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }, [])\r\n\r\n\r\n    return {handleDeleteNote, handleUpdateNote}\r\n}\r\nexport default useNoteOperations","import { Dispatch, SetStateAction, useCallback } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { deleteNote } from \"../../../Redux/slices/user.slice\"\r\nimport useNoteOperations from \"../../../Utility/Hooks/useNoteOperations\"\r\n\r\nconst useDeleteBtnHandler = (setShouldEnableEditModal: Dispatch<SetStateAction<boolean>>) => {\r\n\r\n    const {handleDeleteNote} = useNoteOperations()\r\n    const dispatch = useDispatch()\r\n\r\n    const handler = useCallback(async(e: any) => {\r\n        e.preventDefault()\r\n        const isClickedDeleteBtn = e.target.classList.contains('note-delete-btn')\r\n        if(isClickedDeleteBtn){\r\n            const note_id: string = e.target.parentElement.parentElement.id\r\n            const isDeleted = await handleDeleteNote(note_id)\r\n            if(isDeleted){\r\n                dispatch(deleteNote(note_id))\r\n                setShouldEnableEditModal(false)\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    return handler\r\n}\r\nexport default useDeleteBtnHandler","import { Dispatch, SetStateAction, useCallback } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { INote } from \"../../../Inote\"\r\nimport { updateNote } from \"../../../Redux/slices/user.slice\"\r\nimport useNoteOperations from \"../../../Utility/Hooks/useNoteOperations\"\r\n\r\nconst useNoteUpdateHandler = ( setNoteToBeEdited: Dispatch<SetStateAction<INote>> ) => {\r\n    const {handleUpdateNote} = useNoteOperations()\r\n    const dispatch = useDispatch()\r\n\r\n    const handler = useCallback(async( updated_note: Record<any, any> ) => {\r\n        const isUpdated = await handleUpdateNote(updated_note)\r\n        if(isUpdated) {\r\n            setNoteToBeEdited((v) => ({...v, _id: ''}))\r\n            setTimeout(() => setNoteToBeEdited(({ _id: '', title: '', body: '', bg: [''], delete: false})), 500)\r\n            dispatch(updateNote(updated_note))\r\n        }\r\n    }, [])\r\n\r\n    return handler\r\n}\r\nexport default useNoteUpdateHandler","import { Dispatch, SetStateAction, useCallback } from \"react\"\r\nimport { INote } from \"../../../Inote\"\r\n\r\n\r\nconst useModalEnableHandler = (setShouldEnableEditModal: Dispatch<SetStateAction<boolean>>, setNoteToBeEdited: Dispatch<SetStateAction<INote>>) => {\r\n\r\n\r\n    const handler = useCallback((e: any) => {\r\n        const isNoteClicked = e.target.classList.contains('note') | e.target.classList.contains('note-title') | e.target.classList.contains('note-body')\r\n        if(isNoteClicked){\r\n            const note_id = e.target.parentElement.parentElement.id\r\n            setNoteToBeEdited(v => ({...v, _id: note_id}))\r\n            setShouldEnableEditModal(true)\r\n        }\r\n    }, [])\r\n\r\n    return handler\r\n}\r\nexport default useModalEnableHandler","import { memo, useCallback, useEffect, useState } from \"react\"\r\nimport Input from \"../../Components/PureComponents/Input\"\r\nimport Textarea from \"../../Components/PureComponents/Textarea\"\r\nimport Wrapper from \"../../Components/PureComponents/Wrapper\"\r\nimport useSearch from \"../../Redux/hooks/useSearch\"\r\nimport useUser from \"../../Redux/hooks/useUser\"\r\nimport useClickListener from \"../../Utility/Hooks/useClickListener\"\r\nimport useForm from \"../../Utility/Hooks/useForm\"\r\nimport useNoteClickListener from \"../../Utility/Hooks/useNote.click.listener\"\r\nimport useNoteFetch from \"../../Utility/Hooks/useNoteFetch\"\r\nimport useTranformEditModal from \"../../Utility/Hooks/useTransformEditModal\"\r\nimport If from \"../../Utility/Utility Components/If\"\r\nimport NoteCard from \"./Note.card\"\r\nimport EditModal from \"./Note.edit.moda\"\r\nimport useTheme from \"../../Redux/hooks/useTheme\"\r\nimport useDeleteBtnHandler from \"./hooks/useDeleteBtn.handler\"\r\nimport useNoteUpdateHandler from \"./hooks/useNoteUpdate.handler\"\r\nimport useModalEnableHandler from \"./hooks/useModalEnable.handler\"\r\nimport { INote } from \"../../Inote\"\r\n\r\n\r\nconst NoteOutputContainer = () => {\r\n    useNoteFetch()\r\n\r\n    const {search} = useSearch()\r\n    const { user } = useUser()\r\n    const {theme} = useTheme()\r\n    const {addNewState, setStates, states} = useForm()\r\n\r\n    const [shouldEnableEditModal, setShouldEnableEditModal] = useState(false)\r\n    const [noteToBeEdited, setNoteToBeEdited] = useState<INote>({_id:'',bg: [''], title: '', body: '',delete: false})\r\n\r\n\r\n    const isInSearchResult = useCallback((note : INote) =>{\r\n        if(search == undefined) return true\r\n        return note.title.trim().toLowerCase().includes(search.toLowerCase()) || note.body.trim().toLowerCase().includes(search.toLowerCase())\r\n    },[search])\r\n\r\n    const noteUpdateHandler = useNoteUpdateHandler( setNoteToBeEdited )\r\n    const enableNoteEditModalHandler = useModalEnableHandler(setShouldEnableEditModal, setNoteToBeEdited)\r\n    const deleteNoteBtnClickHandler = useDeleteBtnHandler(setShouldEnableEditModal)\r\n\r\n\r\n    useNoteClickListener({element: document.querySelector('.notes-output-section'), handler: enableNoteEditModalHandler, run: user.notes?.length != 0})\r\n    useClickListener({ element: document, handler: () => noteUpdateHandler(noteToBeEdited) , run: !!noteToBeEdited._id })\r\n    useNoteClickListener({run: user.notes?.length != 0 , handler: deleteNoteBtnClickHandler, element: document.querySelector('.notes-output-section')})\r\n\r\n\r\n    useTranformEditModal({note_id: noteToBeEdited._id })\r\n\r\n    useEffect(() => {\r\n        document.documentElement.classList.toggle('hide-overflow', shouldEnableEditModal)\r\n        let timer: NodeJS.Timer\r\n\r\n        if(noteToBeEdited._id && !noteToBeEdited.title){\r\n            user.notes?.forEach(n => {\r\n                if(n._id == noteToBeEdited._id){\r\n                    setStates({title: n.title, body: n.body})\r\n                    setNoteToBeEdited(n)\r\n                }\r\n            })\r\n        }\r\n\r\n        if(!noteToBeEdited._id){\r\n            const modal_transition_time = 300\r\n            timer = setTimeout(() => setShouldEnableEditModal(false), modal_transition_time)\r\n        }\r\n\r\n        return () => clearTimeout(timer)\r\n    }, [noteToBeEdited, shouldEnableEditModal, user.notes])\r\n\r\n\r\n    // for syncing the NoteToBeEdited with states values\r\n    // because i also want the _id, bg  attributes of the note\r\n    useEffect(() => {\r\n        setNoteToBeEdited(v => ({...v, ...states}))\r\n    }, [states])\r\n\r\n\r\n    return(\r\n        <Wrapper mode='notes-output-section'>\r\n            {\r\n                user.notes?.map(n => {\r\n                    return(\r\n                        <NoteCard\r\n                            note={n}\r\n                            key={n._id}\r\n                            styles={{display: isInSearchResult(n) ? 'flex' : 'none', backgroundColor: theme ? n.bg[1] : n.bg[0]}}\r\n                            isVisible={isInSearchResult(n)}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n            <If condition={shouldEnableEditModal}>\r\n                <EditModal mode=\"edit_note\" bg={noteToBeEdited.bg} noteToBeEdited={noteToBeEdited}>\r\n                    <Input {...addNewState({name: 'title', placeholder: 'update title',  state: 'title'})} />\r\n                    <Textarea {...addNewState({name: 'body', placeholder: 'update body',  state: 'body'})} />\r\n                </EditModal>\r\n            </If>\r\n        </Wrapper>\r\n    )\r\n}\r\nexport default memo(NoteOutputContainer)","import { lazy, memo, useEffect  } from \"react\"\r\nimport useColorMenu from \"../../Redux/hooks/useColorMenu\"\r\nimport useUser from \"../../Redux/hooks/useUser\"\r\nimport { clearColorMenu, setColorMenu } from \"../../Redux/slices/color.menu.slice\"\r\nimport useClickListener from \"../../Utility/Hooks/useClickListener\"\r\nimport useMediaQuery from \"../../Utility/Hooks/useMediaQuery\"\r\nimport If from \"../../Utility/Utility Components/If\"\r\nimport WithAuthUser from \"../../Utility/Utility Components/WithAuthUser\"\r\nimport WithSuspense from \"../../Utility/Utility Components/WithSuspense\"\r\nimport ColorList from \"./Color.list\"\r\nimport NoteOutput from \"./Note.output\"\r\n\r\n\r\nconst NoteInput = lazy(() => import('./Note.input' /* webpackChunkName: 'NoteInput' */))\r\nconst MiniNoteInput = lazy(() => import('./MiniNote.input' /* webpackChunkName: 'MiniNoteInput' */))\r\n\r\n\r\nconst Note = () => {\r\n    const [isLargerThan700px] = useMediaQuery({width: 700})\r\n    const {color_menu, dispatch} = useColorMenu()\r\n\r\n    // useClickListener({ element: document, handler: () => noteUpdateHandler(noteToBeEdited) , run: !!noteToBeEdited._id })\r\n    useClickListener({\r\n        element: document,\r\n        handler: () => dispatch(clearColorMenu()),\r\n        run: color_menu.enable\r\n    })\r\n\r\n    useEffect(() => {\r\n        document.querySelector('header')!.style.borderBottom = '1px solid var(--border)';\r\n        return () => {\r\n            document.querySelector('header')!.style.borderBottom = '0px'\r\n        }\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <>\r\n           <If condition={isLargerThan700px}>\r\n                <WithSuspense Comp={() => <NoteInput />}/>\r\n           </If>\r\n           <If condition={!isLargerThan700px}>\r\n                <WithSuspense Comp={() => <MiniNoteInput />}/>\r\n           </If>\r\n\r\n            <NoteOutput />\r\n\r\n            <If condition={color_menu.enable}>\r\n                <ColorList styles={color_menu.position}/>\r\n            </If>\r\n        </>\r\n    )\r\n}\r\nexport default memo(() => <WithAuthUser><Note /></WithAuthUser>)","import { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst useTheme = () => {\r\n    const theme = useSelector((state: Theme) => state.theme.value)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        document.body.classList.toggle('dark', theme)\r\n        localStorage.setItem('dark', JSON.stringify(theme))\r\n    }, [theme] )\r\n\r\n    return {theme, dispatch}\r\n}\r\nexport default useTheme","import { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst useUser = () => {\r\n    const user = useSelector((state: User) => state.user)\r\n    const dispatch = useDispatch()\r\n    return {user, dispatch}\r\n}\r\nexport default useUser","import { useEffect, useRef } from \"react\"\r\n\r\nconst useClickListener = (props: IListenerProps) => {\r\n    const {eventName = 'click',eventName2 = 'keyup', element2 = window, handler, element = window, run} = props\r\n\r\n    const handlerRef = useRef(handler)\r\n    useEffect(() => {\r\n        handlerRef.current = handler\r\n    }, [handler])\r\n\r\n\r\n    useEffect(()=>{\r\n        const eventListener = (e:Event | any ) => {\r\n            (e.target.id == 'wrapper') && handlerRef.current()\r\n        }\r\n        const eventListener2 = (e:KeyboardEvent) => {\r\n            (e.key === 'Escape') && handlerRef.current()\r\n        }\r\n\r\n        if(run){\r\n            element?.addEventListener(eventName, eventListener, false)\r\n            element2?.addEventListener(eventName2, eventListener2, false)\r\n        }else{\r\n            element?.removeEventListener(eventName, eventListener, false)\r\n            element2?.removeEventListener(eventName2, eventListener2, false)\r\n        }\r\n        return () => {\r\n            element?.removeEventListener(eventName, eventListener, false)\r\n            element2?.removeEventListener(eventName2, eventListener2, false)\r\n        }\r\n    }, [eventName, element, run])\r\n\r\n}\r\nexport default useClickListener\r\n\r\n\r\n\r\n\r\n\r\ninterface IListenerProps{\r\n    handler: any,\r\n    eventName?: 'click',\r\n    eventName2?: 'keyup',\r\n    element2?: Window,\r\n    element: Element | null | Window & typeof globalThis | Document,\r\n    run: boolean\r\n}","import { useEffect, useMemo, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { setLogin } from \"../../Redux/slices/user.slice\"\r\n\r\nconst useFetchUser = ({shouldCheckIfUserLogged = true}: {shouldCheckIfUserLogged: boolean}) => {\r\n    const dispatch = useDispatch()\r\n    const [shouldRedirectToLogin, setShouldRedirectToLogin] = useState(false)\r\n\r\n\r\n    const controller = new AbortController()\r\n    const user_fetch_url = new Request(process.env.NODE_ENV == 'development' ? process.env.REACT_APP_DEV_USER_FETCH! : process.env.REACT_APP_PROD_USER_FETCH! )\r\n    const url = useMemo(() => new Request(user_fetch_url, {\r\n        method:'GET',\r\n        headers:{'Content-Type':'application/json'},\r\n        credentials: 'include',\r\n        signal: controller.signal\r\n    }), [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(shouldCheckIfUserLogged){\r\n            (async() => {\r\n                const res = await fetch(url)\r\n                const data = await res.json()\r\n                if('email' in data){\r\n                    dispatch(setLogin(data['email']))\r\n                }\r\n                if(!data['email']){\r\n                    setShouldRedirectToLogin(true)\r\n                }\r\n            })()\r\n        }\r\n    }, [])\r\n    return [shouldRedirectToLogin]\r\n}\r\nexport default useFetchUser","import { FormEvent, memo, ReactNode } from \"react\";\r\nimport styled, { css, CSSProperties } from 'styled-components'\r\n\r\n\r\n\r\nconst Form = memo((props:{\r\n    children:ReactNode,\r\n    mode?: FormMode,\r\n    onSubmit?: ((e: FormEvent<HTMLFormElement>) => Promise<void>) | undefined\r\n    styles?:CSSProperties,\r\n    animate?: true | false,\r\n})=>{\r\n    const {children, mode, onSubmit, styles, animate} = props\r\n\r\n    return(\r\n        <StyledForm onSubmit={onSubmit && onSubmit}\r\n            style={styles}\r\n            mode={mode}   //for margin-top\r\n            animate={animate}\r\n        >\r\n            {children}\r\n        </StyledForm>\r\n    )\r\n})\r\nexport default memo(Form)\r\n\r\n\r\n\r\nconst StyledForm = styled.form<{no_bg?: true | false, mode?: FormMode, animate?: true|false}>`\r\n    height:45rem;\r\n    --form-width: 100%;\r\n    width:var(--form-width);\r\n    display:flex;\r\n    align-items:center;\r\n    flex-direction:column;\r\n    /* max-width:35rem; */\r\n    background:var(--form-bg);\r\n    border-radius: 0.5rem;\r\n    box-shadow: var(--form-shadow);\r\n    margin-inline: auto;\r\n\r\n\r\n    ${({mode})=>{\r\n        if(mode === 'login' || mode === 'register'){\r\n            return css`\r\n                border-radius:0.5rem;\r\n                padding-inline:2rem;\r\n                /* padding-block-end:2rem; */\r\n                padding-block-start: 0;\r\n                box-shadow: none;\r\n\r\n                @media (min-width: 650px){\r\n                    max-width:40rem;\r\n                }\r\n\r\n            `\r\n        }\r\n        if(mode === 'create_note'){\r\n            return css`\r\n                height:25rem;\r\n                @media (min-width:700px){\r\n                    height:50rem;\r\n                }\r\n            `\r\n        }\r\n    }}\r\n    ${({no_bg})=>{\r\n       if(no_bg === true) {\r\n           return css`\r\n            background:inherit;\r\n        `\r\n        }\r\n    }}\r\n    button{\r\n        margin-top: auto;   //button will be at the bottom of the form\r\n        margin-bottom: 2rem;\r\n    }\r\n\r\n    /* animate flag */\r\n    ${({animate})=>{\r\n        if(animate){\r\n            return css`\r\n                animation:animate_form 0.4s ease-in forwards;\r\n            `\r\n        }\r\n    }}\r\n\r\n    @keyframes animate_form{\r\n        0%{\r\n            opacity:0;\r\n            transform:translateX(-100%);\r\n        }\r\n        50%{\r\n            transform:translateX(50%);\r\n        }\r\n    }\r\n\r\n`\r\n","import { memo } from \"react\"\r\ntype LabelProps = { text:string, focus?:string  }\r\n\r\nconst LabelField = (props:LabelProps)=> <label className={props.focus ? 'transform' : ''}>{props.text}</label>\r\nexport default memo(LabelField)\r\n\r\n\r\n\r\n","import { useCallback, useState } from \"react\"\r\n\r\nconst useSubmit = () => {\r\n    const [controller] = useState(new AbortController())\r\n\r\n    const handleSubmit = useCallback(async(props:{url: string, method: 'GET'| 'POST'|'DELETE'|'PATCH', body: any}) => {\r\n        const {url, method, body} = props\r\n\r\n        const request = new Request(url, {\r\n            method,\r\n            body: JSON.stringify(body),\r\n            headers: {'content-type': 'application/json'},\r\n            credentials: 'include',\r\n            signal: controller.signal\r\n        })\r\n        try {\r\n            const res = await fetch(request)\r\n            return res.json()\r\n        } catch (error: any) {\r\n            return new Error('error occured', {cause: Error(error)})\r\n        }\r\n    }, [])\r\n\r\n    return {handleSubmit}\r\n}\r\nexport default useSubmit","import { ChangeEvent, Dispatch, FormEvent, SetStateAction, useCallback, useEffect, useState } from \"react\"\r\nimport Form from '../../Components/PureComponents/Form'\r\nimport FormGroup from \"../../Components/Journal Components/FormGroup/Form.group\"\r\nimport FormLabel from \"../../Components/Journal Components/FormGroup/Form.label\"\r\nimport { setLogin } from \"../../Redux/slices/user.slice\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport useSubmit from \"./useSubmit\"\r\nimport {  useNavigate } from \"react-router-dom\"\r\n\r\n\r\nconst useForm = () =>{\r\n    const [states, setStates] = useState<Record<any, any>>({})\r\n    const [loading, setLoading] = useState(false)\r\n    const [errors, setErrors] = useState(Array())\r\n    const [error, setError] = useState('')\r\n    const [disabled, setDisabled] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const {handleSubmit: handleFormSubmitUtil} = useSubmit()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const handleSubmit = useCallback( async(props:{e: FormEvent<HTMLFormElement>, url: string, setIsDisabled: Dispatch<SetStateAction<boolean>> }) => {\r\n        const {e, url, setIsDisabled } = props\r\n        e.preventDefault()\r\n        try{\r\n            setIsDisabled(true)\r\n            setLoading(true)\r\n\r\n            const data = await handleFormSubmitUtil({\r\n                url, body: states,\r\n                method: 'POST'\r\n            })\r\n\r\n            data['_id'] && !data['email'] &&  navigate('/login');    // if registration is success\r\n           data['_id'] && dispatch(setLogin(data['email']));    // if login is success\r\n\r\n            // if error occurs\r\n            'errors' in data && setErrors(data['errors'])\r\n            'error' in data && setError(data['error'])\r\n        }catch(err){\r\n            setErrors(Array(err))\r\n        }finally{\r\n            setIsDisabled(false)\r\n            setLoading(false)\r\n        }\r\n    }, [states])\r\n\r\n    const clearErrors = useCallback(() => setErrors([]), [])\r\n    const clearError = useCallback(() => setError(''), [])\r\n\r\n    useEffect(() => {\r\n        let timeout: NodeJS.Timeout\r\n        if(errors.length != 0){\r\n            timeout = setTimeout(clearErrors, 4000)\r\n        }\r\n        return () => clearTimeout(timeout)\r\n    }, [errors])\r\n\r\n    useEffect(() => {\r\n        let timeout: NodeJS.Timeout\r\n        if(error){\r\n            timeout = setTimeout(clearError, 4000)\r\n        }\r\n        return () => clearTimeout(timeout)\r\n    }, [error])\r\n\r\n\r\n    const handleChange = useCallback((value: string, state:string) =>{\r\n        setStates((old:any) => ({\r\n            ...old,\r\n            [state]:value\r\n        }))\r\n    }, [states])\r\n\r\n\r\n    const addNewState = useCallback(( props : {\r\n        state: string,\r\n        placeholder?: string,\r\n        name?: string,\r\n        id?: string,\r\n        type?: 'email' | 'password' | 'text'\r\n    }) => {\r\n        return {\r\n            value: states[props.state] || '',\r\n            onChange: (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => handleChange(e.target.value, props.state),\r\n            ...props\r\n        }\r\n    }, [states])\r\n\r\n\r\n    return { addNewState, setStates, states, Form, FormGroup, FormLabel, errors, loading, handleSubmit, disabled, setDisabled, error, setLoading  }\r\n}\r\nexport default useForm","import { useCallback, useEffect, useState } from \"react\"\r\n\r\nconst useMediaQuery = ({width = 750 }: {width?: number}) => {\r\n    const [show, setShow] = useState(window.innerWidth > width)\r\n    const handleResize = useCallback(() => setShow(window.innerWidth > width), [])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleResize)\r\n        return () => window.removeEventListener('resize', handleResize)\r\n    }, [])\r\n\r\n    return [show]\r\n}\r\nexport default useMediaQuery","import { ReactNode } from \"react\"\r\n\r\nconst If = ( {condition, children} : {condition:any, children:ReactNode} ) =>{\r\n    if(!!condition){\r\n        return <>{children}</>\r\n    }\r\n    return null\r\n}\r\nexport default If","import { CSSProperties } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst WithModalWrapper = ({children, style }:\r\n    {children: JSX.Element,  style?: CSSProperties }\r\n) => {\r\n    return(\r\n        <StyledwithModalWrapper role='wrapper' id='wrapper' style={style}>\r\n            {children}\r\n        </StyledwithModalWrapper>\r\n    )\r\n}\r\nexport default WithModalWrapper\r\n\r\n\r\n\r\nconst StyledwithModalWrapper = styled.div`\r\n    position: fixed;\r\n    inset: 0;\r\n    height: 100%;\r\n    background-color: rgba(0,0,0,0.3);\r\n    z-index: 100;\r\n    transition: background 0.5s;\r\n`"],"names":["FormGroup","children","styles","useState","focus","setFocus","StyledFormGroup","style","Children","child","type","cloneElement","memo","styled","Loader","props","py","px","w","h","StyledLoader","className","Button","cn","onClick","mode","isDisabled","loader","StyledButton","disabled","If","condition","redirect_text","css","Input","handleFocus","useCallback","handleBlur","e","target","value","length","StyledInput","onFocus","onBlur","Span","bg_clr","bg","Math","random","toString","slice","StyledSpan","Textarea","StyledTextArea","Wrapper","StyledWrapper","color_menu","useSelector","state","dispatch","useDispatch","WithAuthUser","navigate","useNavigate","user","useUser","isLoggedIn","useMemo","email","useFetchUser","shouldCheckIfUserLogged","shouldRedirectToLogin","redirectToLogin","useEffect","white","green","yellow","purple","red","ColorBox","clr","handleClick","theme","useTheme","color","Object","keys","handleColorSubmit","background","width","height","borderRadius","ColorList","useColorMenu","stopPropagation","item","includes","change_clr_url","Request","process","_id","fetch","credentials","method","body","JSON","stringify","headers","res","json","success","changeNoteColor","setOnlyBg","StyledColorList","ColorsArr","i","search","eventName","handler","element","window","run","handlerRef","useRef","current","eventListener","addEventListener","removeEventListener","handleFetchNotes","note_fetch_url","data","notes","setNote","note_id","ref_id","modal_ref","element_ref","enableEditModal","modal","document","getElementById","id","opacity","getBoundingClientRect","top","left","setProperty","setTimeout","classList","add","disableEditModal","remove","StyledH4","StyledP","xmlns","viewBox","fill","d","cx","cy","r","OverlayMenu","lazy","NoteCard","note","useMediaQuery","isLargerThan750","isOverlayMenuVisibile","setIsOverlayMenuVisibile","setOverlayMenuTrue","setOverlayMenuFalse","toggleColorMenu","currentTarget","setColorMenu","enable","position","title","marked_note","setMarkedNote","useSearch","isVisible","undefined","setIsVisible","obj","replace","StyledNote","onMouseEnter","onMouseLeave","padding","borderBottom","margin","textAlign","parse","overflow","flex","P","WithSuspense","Comp","backgroundColor","noteToBeEdited","StyledEditModal","border","handleDeleteNote","delete_note_url","BIN","console","log","handleUpdateNote","update_note","update_note_url","setShouldEnableEditModal","useNoteOperations","preventDefault","contains","parentElement","deleteNote","setNoteToBeEdited","updated_note","v","delete","updateNote","NoteOutputContainer","useNoteFetch","useForm","addNewState","setStates","states","shouldEnableEditModal","isInSearchResult","trim","toLowerCase","noteUpdateHandler","useNoteUpdateHandler","enableNoteEditModalHandler","useModalEnableHandler","deleteNoteBtnClickHandler","useDeleteBtnHandler","useNoteClickListener","querySelector","useClickListener","useTranformEditModal","timer","documentElement","toggle","forEach","n","clearTimeout","map","display","name","placeholder","NoteInput","MiniNoteInput","Note","isLargerThan700px","clearColorMenu","localStorage","setItem","eventName2","element2","eventListener2","key","setShouldRedirectToLogin","controller","AbortController","user_fetch_url","url","signal","setLogin","Form","onSubmit","animate","StyledForm","no_bg","LabelField","text","handleSubmit","request","Error","cause","loading","setLoading","Array","errors","setErrors","error","setError","setDisabled","handleFormSubmitUtil","useSubmit","setIsDisabled","clearErrors","clearError","timeout","handleChange","old","onChange","FormLabel","innerWidth","show","setShow","handleResize","StyledwithModalWrapper","role"],"sourceRoot":""}