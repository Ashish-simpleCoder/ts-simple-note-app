{"version":3,"file":"static/js/358.c451a933.chunk.js","mappings":"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","sources":["Components/Journal Components/FormGroup/Form.group.tsx","Components/Journal Components/Loader.tsx","Components/PureComponents/Button.tsx","Components/PureComponents/H3.tsx","Components/PureComponents/Input.tsx","Redux/hooks/useTheme.tsx","Redux/hooks/useUser.tsx","Svg/Email.svg.tsx","Svg/Password.svg.tsx","Utility/Hooks/useFetchUser.tsx","Components/PureComponents/Form.tsx","Components/Journal Components/FormGroup/Form.label.tsx","Utility/Hooks/useSubmit.tsx","Utility/Hooks/useForm.tsx","Utility/Hooks/useLoginValidations.tsx","Utility/Utility Components/If.tsx","Utility/Utility Components/WithFetchUserHook.tsx"],"sourcesContent":["import { Children, cloneElement, memo, useState } from \"react\"\r\nimport styled, { CSSProperties }  from \"styled-components\"\r\n\r\n\r\nconst FormGroup = ({children, styles}: {children: JSX.Element | JSX.Element[], styles?: CSSProperties}) => {\r\n    const [focus, setFocus] = useState(false)\r\n\r\n    return(\r\n        <StyledFormGroup style={styles}>\r\n            {\r\n                Children.map(children, (child:JSX.Element)=>{\r\n                    if(typeof child.type == 'string') return child\r\n                    return cloneElement(child, {focus, setFocus })\r\n                })\r\n            }\r\n        </StyledFormGroup>\r\n    )\r\n}\r\nexport default memo(FormGroup)\r\n\r\nconst StyledFormGroup = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    width:100%;\r\n    height: clamp(3.5rem ,3.8rem, 3.8vw);\r\n    position:relative;\r\n    margin-top:6rem;\r\n    background-color: var(--form-group-bg);\r\n    border-radius: 0.5rem;\r\n\r\n    div.utility.invalid, div.utility.focus-border{\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        pointer-events: none;\r\n        border-radius: 0.5rem;\r\n        border: 1px solid transparent;\r\n    }\r\n\r\n\r\n    /* giving margin on email form field */\r\n    &:nth-of-type(1){\r\n        margin-top:3rem;\r\n    }\r\n    div.svg-container{\r\n        height: 100%;\r\n        width: 4rem;\r\n        display: grid;\r\n        place-items: center;\r\n    }\r\n\r\n    label{\r\n        position:absolute;\r\n        transform: translateX(5rem);\r\n        pointer-events:none;\r\n        transition:transform 0.3s;\r\n    }\r\n    .transform{\r\n        transform:translate(1rem, -170%);\r\n    }\r\n\r\n\r\n    >input{\r\n        padding-inline-end: 1rem;\r\n        flex: 1;\r\n        height: 100%;\r\n        outline: none;\r\n        background-color: transparent !important;\r\n    }\r\n\r\n`","import { memo } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\n\r\ntype LoaderProps = {px?: number, py?: number, w?: number, h?: string}\r\n\r\nconst Loader = (props: LoaderProps) => {\r\n    const {py,px,w,h} = props\r\n\r\n   return(\r\n      <StyledLoader py={py} px={px} w={w} h={h}>\r\n         <div className=\"circle c1\"></div>\r\n         <div className=\"circle c2\"></div>\r\n      </StyledLoader>\r\n   )\r\n}\r\nexport default memo(Loader)\r\n\r\nconst StyledLoader = styled.div<{px?: number, py?: number, w?: number, h?: string}>`\r\n   height:100%;\r\n   position:relative;\r\n   display:flex;\r\n   align-items:center;\r\n   justify-content:center;\r\n   text-align:center;\r\n\r\n   .circle{\r\n      position:absolute;\r\n      width:${props=>props.w ? props.w : '2rem'};\r\n      height:${props=>props.h ? props.h : '2rem'};\r\n      border-radius:50%;\r\n      border:clamp(0.3rem, 0.5rem,0.5vw) solid transparent;\r\n      border-top-color:purple;\r\n      animation: animate_loaders 1s linear infinite;\r\n   }\r\n\r\n   .c2{\r\n      border-bottom-color: red;\r\n      border-top-color:transparent;\r\n   }\r\n\r\n\r\n   @keyframes animate_loaders{\r\n      0%{\r\n         border-width: clamp(0.3rem, 0.5rem, 0.5vw);\r\n         transform: rotate(0);\r\n      }50%{\r\n         border-width: clamp(0.1rem,0.2rem,0.2vw);\r\n         transform: rotate(180deg);\r\n      }100%{\r\n         border-width: clamp(0.3rem, 0.5rem, 0.5vw);\r\n         transform: rotate(360deg);\r\n      }\r\n   }\r\n`","import { ActionCreatorWithoutPayload } from \"@reduxjs/toolkit\";\r\nimport { CSSProperties, memo, ReactNode } from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\nimport If from \"../../Utility/Utility Components/If\"\r\nimport Loader from \"../Journal Components/Loader\"\r\n\r\ninterface PropType {\r\n    children?: JSX.Element | JSX.Element[] | string | ReactNode,\r\n    cn?: string,\r\n    onClick?:\r\n    (() => Promise<void>) |\r\n    (() => {\r\n        type: ActionCreatorWithoutPayload<string>;\r\n    } | void) |\r\n    (() => { payload: undefined; type: string; }) |\r\n    any,\r\n\r\n    mode?: BtnMode,\r\n    isDisabled?: boolean,\r\n    loader?: boolean,\r\n    style?: CSSProperties,\r\n    redirect_text?: string\r\n}\r\n\r\nconst Button = (props: PropType) => {\r\n    const {children, cn, onClick, mode, isDisabled, loader, style} = props\r\n\r\n\r\n    return(\r\n        <StyledButton className={cn} onClick={onClick} mode={mode} disabled={isDisabled} style={style}>\r\n            <If condition={loader}> <Loader /> </If>\r\n            <If condition={!loader && props.redirect_text}> {props.redirect_text} </If>\r\n            <If condition={!loader}> {children} </If>\r\n        </StyledButton>\r\n    )\r\n}\r\nexport default memo(Button)\r\n\r\n\r\n\r\nconst StyledButton = styled.button<{mode?: BtnMode}>`\r\n    text-decoration: none;\r\n    padding: clamp(0.3rem, 0.4rem, 0.4vw) clamp(0.7rem, 0.9rem, 0.9vw);\r\n    display: grid;\r\n    place-items: center;\r\n\r\n    :disabled{\r\n        background-color: #424242;\r\n        cursor: not-allowed;\r\n        border: none;\r\n        /* color: ; */\r\n        color: #979797;\r\n        /* width: 100%; */\r\n    }\r\n\r\n\r\n    transition: background 0.3s;\r\n    background-color: var(--body-bg);   // for theme-toggling button\r\n    cursor: pointer;\r\n    border: none;\r\n\r\n\r\n\r\n    ${(props)=>{\r\n        switch(props.mode){\r\n            case \"hero_btn\": return css`\r\n                padding:1rem 3rem;\r\n                /* height:unset; */\r\n                display:flex;\r\n                /* align-items:center;    //making text vertically center */\r\n                margin-top:3rem;\r\n                background-color: var(--brand);\r\n                font-weight:600;\r\n                box-shadow:0 0.2rem 0.2rem rgba(0, 0, 0, 0.3);\r\n                color: white;\r\n                box-shadow: var(--btn-shadow);\r\n            `\r\n\r\n            // case 'delete_note_btn': return css`\r\n            //     width:3rem;\r\n            //     display:flex;\r\n            //     align-items:center;\r\n            //     justify-content:center;\r\n            //     &::before{\r\n            //         content:'';\r\n            //         position:absolute;\r\n\r\n            //         background-image:${props.loader ? '' : 'url(\"./imgs/trash.png\")'};\r\n            //         background-repeat:no-repeat;\r\n            //         width:100%;\r\n            //         height:100%;\r\n            //         display:flex;\r\n            //         z-index:1;\r\n            //     }\r\n            // `\r\n            case 'toggle-nav-btn': return css`\r\n                margin-inline-start: auto;\r\n                z-index: 6;\r\n            `\r\n\r\n            case 'create_note_btn': return css`\r\n                background:var(--success-400);\r\n                /* color:hsl(0, 0%, 90%); */\r\n                /* box-shadow:0 0.2rem 0.2rem rgba(0, 0, 0, 0.3); */\r\n            `\r\n            case 'logout_btn': return css`\r\n                height:unset;\r\n            `\r\n            case 'login_form_btn': return css`\r\n                width:100%;\r\n                position: relative;\r\n                z-index: 2;\r\n                background-color: green;\r\n                color: white;\r\n                border: none;\r\n                height: 4rem;\r\n                /* &:before{\r\n                    content: '';\r\n                    position:absolute;\r\n                    left: 0;\r\n                    top: 0;\r\n                    height: 100%;\r\n                    width: 0px;\r\n                    transition: all 0.3s;\r\n                }\r\n                &:hover{\r\n                    color: white;\r\n                }\r\n                &:hover::before{\r\n                    width: 100%;\r\n                    background-color: var(--brand);\r\n                    z-index: -1;\r\n                } */\r\n            `\r\n        }\r\n    }}\r\n`","import { Children, memo } from \"react\";\r\nimport styled, { CSSProperties } from \"styled-components\";\r\n\r\nconst H3 = memo(({children, styles, handleClick, cn}:{children:any, styles?:CSSProperties, handleClick?:() =>void, cn?:string})=>{\r\n    return(\r\n        <StyledH3 style={styles} onClick={handleClick} className={cn}>{children}</StyledH3>\r\n    )\r\n})\r\nexport default H3\r\n\r\nconst StyledH3 = styled.h3<{styles?:CSSProperties}>`\r\n    font-size:2.2rem;\r\n    font-weight: 600;\r\n    /* color: var(--h3-clr); */\r\n`","import { ChangeEvent, CSSProperties, Dispatch, memo, SetStateAction, useCallback } from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\n\r\ntype Mode = 'search_bar'| any\r\n\r\nconst Input = ( props: {\r\n    type?: 'password' | 'text' | 'email',\r\n    value?: string,\r\n    onChange: (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void,\r\n    setFocus?: Dispatch<SetStateAction<boolean>>,\r\n    name?: string,\r\n    id?: string,\r\n    placeholder?: string,\r\n    styles?: CSSProperties,\r\n    mode?: Mode\r\n}) => {\r\n\r\n    const handleFocus = useCallback(()=> props.setFocus?.(true) , [props.setFocus])\r\n    const handleBlur = useCallback((e)=> props.setFocus?.(e.target.value.length > 0 ) , [props.setFocus])\r\n\r\n    return(\r\n        <StyledInput {...props} onFocus={handleFocus} onBlur={handleBlur}/>\r\n    )\r\n}\r\nexport default memo(Input)\r\n\r\n\r\n\r\nconst StyledInput = styled.input<{mode?: Mode}>`\r\n    height: clamp(3.5rem, 3.5rem, 3.5vw);\r\n    padding-inline: 1rem;\r\n\r\n\r\n    &:focus + div.utility.focus-border{\r\n        /* background-color: var(--input-focus-bg); */\r\n        outline: 1px solid var(--outline);\r\n    }\r\n\r\n    /* ${({mode}) => {\r\n        if(mode == 'search_bar'){\r\n            return css`\r\n            /* height: inherit; */\r\n            `\r\n        }\r\n    }} */\r\n\r\n\r\n    /* &:invalid + div.invalid{\r\n        border-color: var(--dan-200);\r\n    }\r\n\r\n\r\n    &:valid + div.invalid{\r\n        border-color: var(--success-300);\r\n    } */\r\n`","import { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst useTheme = () => {\r\n    const theme = useSelector((state: Theme) => state.theme.value)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        document.body.classList.toggle('dark', theme)\r\n        localStorage.setItem('dark', JSON.stringify(theme))\r\n    }, [theme] )\r\n\r\n    return {theme, dispatch}\r\n}\r\nexport default useTheme","import { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst useUser = () => {\r\n    const user = useSelector((state: User) => state.user)\r\n    const dispatch = useDispatch()\r\n    return {user, dispatch}\r\n}\r\nexport default useUser","import { memo, useMemo } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst Email = () => {\r\n    const dark_theme = useSelector((state: {theme: {value: true | false}}) => state.theme.value)\r\n    const fill_color = useMemo(() => dark_theme ? '#8D63F1' : '#3B0C9E', [dark_theme])\r\n\r\n    return(\r\n       <div className='svg-container'>\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M21 4.5H3C2.60218 4.5 2.22064 4.65804 1.93934 4.93934C1.65804 5.22064 1.5 5.60218 1.5 6V18C1.5 18.3978 1.65804 18.7794 1.93934 19.0607C2.22064 19.342 2.60218 19.5 3 19.5H21C21.3978 19.5 21.7794 19.342 22.0607 19.0607C22.342 18.7794 22.5 18.3978 22.5 18V6C22.5 5.60218 22.342 5.22064 22.0607 4.93934C21.7794 4.65804 21.3978 4.5 21 4.5ZM19.35 6L12 11.085L4.65 6H19.35ZM3 18V6.6825L11.5725 12.615C11.698 12.7021 11.8472 12.7488 12 12.7488C12.1528 12.7488 12.302 12.7021 12.4275 12.615L21 6.6825V18H3Z\" fill={fill_color}/>\r\n        </svg>\r\n       </div>\r\n\r\n    )\r\n}\r\nexport default memo(Email)","import { memo, useMemo } from \"react\"\r\nimport useTheme from \"../Redux/hooks/useTheme\"\r\n\r\nconst Password = () => {\r\n    const {theme} = useTheme()\r\n    const fill_color = useMemo(() => theme ? '#8D63F1' : '#3B0C9E', [theme])\r\n\r\n    return(\r\n        <div className='svg-container'>\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M15.75 1.5C14.6959 1.49976 13.6565 1.74642 12.7149 2.22023C11.7734 2.69404 10.9559 3.38181 10.328 4.22844C9.7001 5.07506 9.27925 6.057 9.09917 7.09555C8.91909 8.13411 8.98479 9.20041 9.291 10.209L1.5 18V22.5H6L13.791 14.709C14.7194 14.9908 15.6977 15.0692 16.6591 14.9387C17.6206 14.8083 18.5426 14.4721 19.3624 13.953C20.1821 13.434 20.8804 12.7444 21.4095 11.9311C21.9386 11.1178 22.2862 10.2 22.4285 9.24025C22.5709 8.28049 22.5046 7.30132 22.2343 6.36948C21.964 5.43764 21.496 4.57502 20.8622 3.84042C20.2283 3.10582 19.4436 2.51649 18.5614 2.11261C17.6792 1.70872 16.7203 1.49978 15.75 1.5ZM15.75 13.5C15.2336 13.4997 14.7201 13.4234 14.226 13.2735L13.3657 13.0125L12.7305 13.6478L10.3448 16.0335L9.3105 15L8.25 16.0605L9.28425 17.0947L8.09475 18.2843L7.0605 17.25L6 18.3105L7.03425 19.3447L5.379 21H3V18.621L10.3515 11.2695L10.9875 10.6342L10.7265 9.774C10.4059 8.71724 10.4268 7.58631 10.786 6.54207C11.1453 5.49784 11.8247 4.59347 12.7275 3.95762C13.6304 3.32177 14.7108 2.98681 15.815 3.0004C16.9192 3.01398 17.9911 3.37542 18.878 4.03329C19.765 4.69116 20.4219 5.61197 20.7554 6.66473C21.0888 7.71749 21.0818 8.84859 20.7354 9.89714C20.3889 10.9457 19.7206 11.8583 18.8256 12.5051C17.9305 13.152 16.8543 13.5001 15.75 13.5Z\" fill={fill_color}/>\r\n            <path d=\"M16.5 9C17.3284 9 18 8.32843 18 7.5C18 6.67157 17.3284 6 16.5 6C15.6716 6 15 6.67157 15 7.5C15 8.32843 15.6716 9 16.5 9Z\" fill={fill_color}/>\r\n        </svg>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default memo(Password)","import { useEffect, useMemo, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { setLogin } from \"../../Redux/slices/user.slice\"\r\n\r\nconst useFetchUser = ({shouldCheckIfUserLogged = true}: {shouldCheckIfUserLogged: boolean}) => {\r\n    const dispatch = useDispatch()\r\n    const [shouldRedirectToLogin, setShouldRedirectToLogin] = useState(false)\r\n\r\n\r\n    const controller = new AbortController()\r\n    const user_fetch_url = new Request(process.env.NODE_ENV == 'development' ? process.env.REACT_APP_DEV_USER_FETCH! : process.env.REACT_APP_PROD_USER_FETCH! )\r\n    const url = useMemo(() => new Request(user_fetch_url, {\r\n        method:'GET',\r\n        headers:{'Content-Type':'application/json'},\r\n        credentials: 'include',\r\n        signal: controller.signal\r\n    }), [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(shouldCheckIfUserLogged){\r\n            (async() => {\r\n                const res = await fetch(url)\r\n                const data = await res.json()\r\n                if('email' in data){\r\n                    dispatch(setLogin(data['email']))\r\n                }\r\n                if(!data['email']){\r\n                    setShouldRedirectToLogin(true)\r\n                }\r\n            })()\r\n        }\r\n    }, [])\r\n    return [shouldRedirectToLogin]\r\n}\r\nexport default useFetchUser","import { FormEvent, memo, ReactNode } from \"react\";\r\nimport styled, { css, CSSProperties } from 'styled-components'\r\n\r\n\r\n\r\nconst Form = memo((props:{\r\n    children:ReactNode,\r\n    mode?: FormMode,\r\n    onSubmit?: ((e: FormEvent<HTMLFormElement>) => Promise<void>) | undefined\r\n    styles?:CSSProperties,\r\n    animate?: true | false,\r\n})=>{\r\n    const {children, mode, onSubmit, styles, animate} = props\r\n\r\n    return(\r\n        <StyledForm onSubmit={onSubmit && onSubmit}\r\n            style={styles}\r\n            mode={mode}   //for margin-top\r\n            animate={animate}\r\n        >\r\n            {children}\r\n        </StyledForm>\r\n    )\r\n})\r\nexport default memo(Form)\r\n\r\n\r\n\r\nconst StyledForm = styled.form<{no_bg?: true | false, mode?: FormMode, animate?: true|false}>`\r\n    height:45rem;\r\n    --form-width: 100%;\r\n    width:var(--form-width);\r\n    display:flex;\r\n    align-items:center;\r\n    flex-direction:column;\r\n    /* max-width:35rem; */\r\n    background:var(--form-bg);\r\n    border-radius: 0.5rem;\r\n    box-shadow: var(--form-shadow);\r\n    margin-inline: auto;\r\n\r\n\r\n    ${({mode})=>{\r\n        if(mode === 'login' || mode === 'register'){\r\n            return css`\r\n                border-radius:0.5rem;\r\n                padding-inline:2rem;\r\n                /* padding-block-end:2rem; */\r\n                padding-block-start: 0;\r\n                box-shadow: none;\r\n\r\n                @media (min-width: 650px){\r\n                    max-width:40rem;\r\n                }\r\n\r\n            `\r\n        }\r\n        if(mode === 'create_note'){\r\n            return css`\r\n                height:25rem;\r\n                @media (min-width:700px){\r\n                    height:50rem;\r\n                }\r\n            `\r\n        }\r\n    }}\r\n    ${({no_bg})=>{\r\n       if(no_bg === true) {\r\n           return css`\r\n            background:inherit;\r\n        `\r\n        }\r\n    }}\r\n    button{\r\n        margin-top: auto;   //button will be at the bottom of the form\r\n        margin-bottom: 2rem;\r\n    }\r\n\r\n    /* animate flag */\r\n    ${({animate})=>{\r\n        if(animate){\r\n            return css`\r\n                animation:animate_form 0.4s ease-in forwards;\r\n            `\r\n        }\r\n    }}\r\n\r\n    @keyframes animate_form{\r\n        0%{\r\n            opacity:0;\r\n            transform:translateX(-100%);\r\n        }\r\n        50%{\r\n            transform:translateX(50%);\r\n        }\r\n    }\r\n\r\n`\r\n","import { memo } from \"react\"\r\ntype LabelProps = { text:string, focus?:string  }\r\n\r\nconst LabelField = (props:LabelProps)=> <label className={props.focus ? 'transform' : ''}>{props.text}</label>\r\nexport default memo(LabelField)\r\n\r\n\r\n\r\n","import { useCallback, useState } from \"react\"\r\n\r\nconst useSubmit = () => {\r\n    const [controller] = useState(new AbortController())\r\n\r\n    const handleSubmit = useCallback(async(props:{url: string, method: 'GET'| 'POST'|'DELETE'|'PATCH', body: any}) => {\r\n        const {url, method, body} = props\r\n\r\n        const request = new Request(url, {\r\n            method,\r\n            body: JSON.stringify(body),\r\n            headers: {'content-type': 'application/json'},\r\n            credentials: 'include',\r\n            signal: controller.signal\r\n        })\r\n        try {\r\n            const res = await fetch(request)\r\n            return res.json()\r\n        } catch (error: any) {\r\n            return new Error('error occured', {cause: Error(error)})\r\n        }\r\n    }, [])\r\n\r\n    return {handleSubmit}\r\n}\r\nexport default useSubmit","import { ChangeEvent, Dispatch, FormEvent, SetStateAction, useCallback, useEffect, useState } from \"react\"\r\nimport Form from '../../Components/PureComponents/Form'\r\nimport FormGroup from \"../../Components/Journal Components/FormGroup/Form.group\"\r\nimport FormLabel from \"../../Components/Journal Components/FormGroup/Form.label\"\r\nimport { setLogin } from \"../../Redux/slices/user.slice\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport useSubmit from \"./useSubmit\"\r\nimport {  useNavigate } from \"react-router-dom\"\r\n\r\n\r\nconst useForm = () =>{\r\n    const [states, setStates] = useState<Record<any, any>>({})\r\n    const [loading, setLoading] = useState(false)\r\n    const [errors, setErrors] = useState(Array())\r\n    const [error, setError] = useState('')\r\n    const [disabled, setDisabled] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const {handleSubmit: handleFormSubmitUtil} = useSubmit()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const handleSubmit = useCallback( async(props:{e: FormEvent<HTMLFormElement>, url: string, setIsDisabled: Dispatch<SetStateAction<boolean>> }) => {\r\n        const {e, url, setIsDisabled } = props\r\n        e.preventDefault()\r\n        try{\r\n            setIsDisabled(true)\r\n            setLoading(true)\r\n\r\n            const data = await handleFormSubmitUtil({\r\n                url, body: states,\r\n                method: 'POST'\r\n            })\r\n\r\n            data['_id'] && !data['email'] &&  navigate('/login');    // if registration is success\r\n           data['_id'] && dispatch(setLogin(data['email']));    // if login is success\r\n\r\n            // if error occurs\r\n            'errors' in data && setErrors(data['errors'])\r\n            'error' in data && setError(data['error'])\r\n        }catch(err){\r\n            setErrors(Array(err))\r\n        }finally{\r\n            setIsDisabled(false)\r\n            setLoading(false)\r\n        }\r\n    }, [states])\r\n\r\n    const clearErrors = useCallback(() => setErrors([]), [])\r\n    const clearError = useCallback(() => setError(''), [])\r\n\r\n    useEffect(() => {\r\n        let timeout: NodeJS.Timeout\r\n        if(errors.length != 0){\r\n            timeout = setTimeout(clearErrors, 4000)\r\n        }\r\n        return () => clearTimeout(timeout)\r\n    }, [errors])\r\n\r\n    useEffect(() => {\r\n        let timeout: NodeJS.Timeout\r\n        if(error){\r\n            timeout = setTimeout(clearError, 4000)\r\n        }\r\n        return () => clearTimeout(timeout)\r\n    }, [error])\r\n\r\n\r\n    const handleChange = useCallback((value: string, state:string) =>{\r\n        setStates((old:any) => ({\r\n            ...old,\r\n            [state]:value\r\n        }))\r\n    }, [states])\r\n\r\n\r\n    const addNewState = useCallback(( props : {\r\n        state: string,\r\n        placeholder?: string,\r\n        name?: string,\r\n        id?: string,\r\n        type?: 'email' | 'password' | 'text'\r\n    }) => {\r\n        return {\r\n            value: states[props.state] || '',\r\n            onChange: (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => handleChange(e.target.value, props.state),\r\n            ...props\r\n        }\r\n    }, [states])\r\n\r\n\r\n    return { addNewState, setStates, states, Form, FormGroup, FormLabel, errors, loading, handleSubmit, disabled, setDisabled, error, setLoading  }\r\n}\r\nexport default useForm","import { useEffect, useState } from \"react\"\r\n\r\nconst useLoginValidations = ({states, mode = 'login'}: {states: any, mode?: 'login' | 'signup'}) => {\r\n    const [isDisabled, setIsDisabled] = useState(true)\r\n\r\n    //for signup page\r\n    const [validations, setValidations] = useState({\r\n        number:false,\r\n        lowercase: false,\r\n        capital: false,\r\n        characters: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(mode == 'login'){\r\n            (!states['email'] || !states['password']) ?  setIsDisabled(true) :  setIsDisabled(false)\r\n        }\r\n    }, [states])\r\n\r\n\r\n    if(mode == 'login'){\r\n        return {isDisabled, setIsDisabled}\r\n    }\r\n    return {isDisabled, setIsDisabled, validations, setValidations}\r\n}\r\nexport default useLoginValidations","import { ReactNode } from \"react\"\r\n\r\nconst If = ( {condition, children} : {condition:any, children:ReactNode} ) =>{\r\n    if(!!condition){\r\n        return <>{children}</>\r\n    }\r\n    return null\r\n}\r\nexport default If","import { useCallback, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport useUser from \"../../Redux/hooks/useUser\"\r\nimport useFetchUser from \"../Hooks/useFetchUser\"\r\n\r\n\r\nconst WithFetchUserHook = (props: {children: JSX.Element}) => {\r\n    const {user} = useUser()\r\n    const navigate = useNavigate()\r\n\r\n    useFetchUser({shouldCheckIfUserLogged: !user.email})\r\n\r\n    const redirectLoggedUserToHome = useCallback(() => navigate('/'), [])\r\n\r\n    useEffect(() => {\r\n        user.email && redirectLoggedUserToHome()\r\n    }, [user.email])\r\n\r\n\r\n    return  <>{props.children}</>\r\n}\r\nexport default WithFetchUserHook"],"names":["FormGroup","children","styles","useState","focus","setFocus","StyledFormGroup","style","Children","child","type","cloneElement","memo","styled","Loader","props","py","px","w","h","StyledLoader","className","Button","cn","onClick","mode","isDisabled","loader","StyledButton","disabled","If","condition","redirect_text","css","H3","handleClick","StyledH3","Input","handleFocus","useCallback","handleBlur","e","target","value","length","StyledInput","onFocus","onBlur","theme","useSelector","state","dispatch","useDispatch","useEffect","document","body","classList","toggle","localStorage","setItem","JSON","stringify","user","Email","dark_theme","fill_color","useMemo","width","height","viewBox","fill","xmlns","d","Password","useTheme","shouldCheckIfUserLogged","shouldRedirectToLogin","setShouldRedirectToLogin","controller","AbortController","user_fetch_url","Request","process","url","method","headers","credentials","signal","fetch","res","json","data","setLogin","Form","onSubmit","animate","StyledForm","no_bg","LabelField","text","handleSubmit","request","Error","cause","states","setStates","loading","setLoading","Array","errors","setErrors","error","setError","setDisabled","handleFormSubmitUtil","useSubmit","navigate","useNavigate","setIsDisabled","preventDefault","clearErrors","clearError","timeout","setTimeout","clearTimeout","handleChange","old","addNewState","onChange","FormLabel","number","lowercase","capital","characters","validations","setValidations","useUser","useFetchUser","email","redirectLoggedUserToHome"],"sourceRoot":""}