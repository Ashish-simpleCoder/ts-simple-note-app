{"version":3,"file":"static/js/SearchBar.5e7e3a1b.chunk.js","mappings":"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","sources":["Components/Journal Components/FormGroup/Form.group.tsx","Components/Journal Components/SearchBar.tsx","Components/PureComponents/Input.tsx","Svg/SearchIcon.tsx","Components/PureComponents/Form.tsx","Components/Journal Components/FormGroup/Form.label.tsx","Utility/Hooks/useSubmit.tsx","Utility/Hooks/useForm.tsx"],"sourcesContent":["import { Children, cloneElement, memo, useState } from \"react\"\r\nimport styled, { CSSProperties }  from \"styled-components\"\r\n\r\n\r\nconst FormGroup = ({children, styles}: {children: JSX.Element | JSX.Element[], styles?: CSSProperties}) => {\r\n    const [focus, setFocus] = useState(false)\r\n\r\n    return(\r\n        <StyledFormGroup style={styles}>\r\n            {\r\n                Children.map(children, (child:JSX.Element)=>{\r\n                    if(typeof child.type == 'string') return child\r\n                    return cloneElement(child, {focus, setFocus })\r\n                })\r\n            }\r\n        </StyledFormGroup>\r\n    )\r\n}\r\nexport default memo(FormGroup)\r\n\r\nconst StyledFormGroup = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    width:100%;\r\n    height: clamp(3.5rem ,3.8rem, 3.8vw);\r\n    position:relative;\r\n    margin-top:6rem;\r\n    background-color: var(--form-group-bg);\r\n    border-radius: 0.5rem;\r\n\r\n    div.utility.invalid, div.utility.focus-border{\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        pointer-events: none;\r\n        border-radius: 0.5rem;\r\n        border: 1px solid transparent;\r\n    }\r\n\r\n\r\n    /* giving margin on email form field */\r\n    &:nth-of-type(1){\r\n        margin-top:3rem;\r\n    }\r\n    div.svg-container{\r\n        height: 100%;\r\n        width: 4rem;\r\n        display: grid;\r\n        place-items: center;\r\n    }\r\n\r\n    label{\r\n        position:absolute;\r\n        transform: translateX(5rem);\r\n        pointer-events:none;\r\n        transition:transform 0.3s;\r\n    }\r\n    .transform{\r\n        transform:translate(1rem, -170%);\r\n    }\r\n\r\n\r\n    >input{\r\n        padding-inline-end: 1rem;\r\n        flex: 1;\r\n        height: 100%;\r\n        outline: none;\r\n        background-color: transparent !important;\r\n    }\r\n\r\n`","import { CSSProperties, memo, useEffect } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { setSearch } from \"../../Redux/slices/search.slice\"\r\nimport SearchIcon from \"../../Svg/SearchIcon\"\r\nimport useForm from \"../../Utility/Hooks/useForm\"\r\nimport Input from \"../PureComponents/Input\"\r\nimport FormGroup from \"./FormGroup/Form.group\"\r\n\r\n\r\nconst SearchBar = (props: {style?: CSSProperties}) => {\r\n    const {addNewState, states} = useForm()\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setSearch(states['search']))\r\n    }, [states['search']])\r\n\r\n\r\n    return(\r\n        <FormGroup  styles={{backgroundColor: 'var(--input-bg)',width: 'unset',margin: 'unset',marginInlineStart: 'auto',marginInlineEnd: 'clamp(2rem, 4rem, 4vw)',...props.style}}>\r\n            <SearchIcon />\r\n            <Input {...addNewState({state: 'search', name:'search', placeholder: 'search notes...'})} mode='search_bar'/>\r\n            <div className=\"utility focus-border\"></div>\r\n        </FormGroup>\r\n    )\r\n}\r\nexport default memo(SearchBar)\r\n\r\n","import { ChangeEvent, CSSProperties, Dispatch, memo, SetStateAction, useCallback } from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\n\r\ntype Mode = 'search_bar'| any\r\n\r\nconst Input = ( props: {\r\n    type?: 'password' | 'text' | 'email',\r\n    value?: string,\r\n    onChange: (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void,\r\n    setFocus?: Dispatch<SetStateAction<boolean>>,\r\n    name?: string,\r\n    id?: string,\r\n    placeholder?: string,\r\n    styles?: CSSProperties,\r\n    mode?: Mode\r\n}) => {\r\n\r\n    const handleFocus = useCallback(()=>{\r\n        props.setFocus && props.setFocus(true)\r\n    } , [props.setFocus])\r\n\r\n    const handleBlur = useCallback((e)=>{\r\n        props.setFocus && props.setFocus(e.target.value.length>0 )\r\n    } , [props.setFocus])\r\n\r\n\r\n    return(\r\n        <StyledInput {...props} onFocus={handleFocus} onBlur={handleBlur}/>\r\n    )\r\n}\r\nexport default memo(Input)\r\n\r\n\r\n\r\nconst StyledInput = styled.input<{mode?: Mode}>`\r\n    height: clamp(3.5rem, 3.5rem, 3.5vw);\r\n    padding-inline: 1rem;\r\n\r\n\r\n    &:focus + div.utility.focus-border{\r\n        /* background-color: var(--input-focus-bg); */\r\n        outline: 1px solid var(--outline);\r\n    }\r\n\r\n    /* ${({mode}) => {\r\n        if(mode == 'search_bar'){\r\n            return css`\r\n            /* height: inherit; */\r\n            `\r\n        }\r\n    }} */\r\n\r\n\r\n    /* &:invalid + div.invalid{\r\n        border-color: var(--dan-200);\r\n    }\r\n\r\n\r\n    &:valid + div.invalid{\r\n        border-color: var(--success-300);\r\n    } */\r\n`","import { useMemo } from \"react\"\r\nimport useTheme from \"../Redux/hooks/useTheme\"\r\n\r\nconst SearchIcon = () => {\r\n    const {theme} = useTheme()\r\n    const fill_color = useMemo(() => theme ? '#8D63F1' : '#3B0C9E', [theme])\r\n    return(\r\n        <div className=\"svg-container\">\r\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M20 20L15.514 15.506L20 20ZM18 9.5C18 11.7543 17.1045 13.9163 15.5104 15.5104C13.9163 17.1045 11.7543 18 9.5 18C7.24566 18 5.08365 17.1045 3.48959 15.5104C1.89553 13.9163 1 11.7543 1 9.5C1 7.24566 1.89553 5.08365 3.48959 3.48959C5.08365 1.89553 7.24566 1 9.5 1C11.7543 1 13.9163 1.89553 15.5104 3.48959C17.1045 5.08365 18 7.24566 18 9.5V9.5Z\" stroke={fill_color} strokeOpacity=\"0.7\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchIcon","import { FormEvent, memo, ReactNode } from \"react\";\r\nimport styled, { css, CSSProperties } from 'styled-components'\r\n\r\n\r\n\r\nconst Form = memo((props:{\r\n    children:ReactNode,\r\n    mode?: FormMode,\r\n    onSubmit?: ((e: FormEvent<HTMLFormElement>) => Promise<void>) | undefined\r\n    styles?:CSSProperties,\r\n    animate?: true | false,\r\n})=>{\r\n    const {children, mode, onSubmit, styles, animate} = props\r\n\r\n    return(\r\n        <StyledForm onSubmit={onSubmit && onSubmit}\r\n            style={styles}\r\n            mode={mode}   //for margin-top\r\n            animate={animate}\r\n        >\r\n            {children}\r\n        </StyledForm>\r\n    )\r\n})\r\nexport default memo(Form)\r\n\r\n\r\n\r\nconst StyledForm = styled.form<{no_bg?: true | false, mode?: FormMode, animate?: true|false}>`\r\n    height:45rem;\r\n    --form-width: 100%;\r\n    width:var(--form-width);\r\n    display:flex;\r\n    align-items:center;\r\n    flex-direction:column;\r\n    /* max-width:35rem; */\r\n    background:var(--form-bg);\r\n    border-radius: 0.5rem;\r\n    box-shadow: var(--form-shadow);\r\n    margin-inline: auto;\r\n\r\n\r\n    ${({mode})=>{\r\n        if(mode === 'login' || mode === 'register'){\r\n            return css`\r\n                border-radius:0.5rem;\r\n                padding-inline:2rem;\r\n                /* padding-block-end:2rem; */\r\n                padding-block-start: 0;\r\n                box-shadow: none;\r\n\r\n                @media (min-width: 650px){\r\n                    max-width:40rem;\r\n                }\r\n\r\n            `\r\n        }\r\n        if(mode === 'create_note'){\r\n            return css`\r\n                height:25rem;\r\n                @media (min-width:700px){\r\n                    height:50rem;\r\n                }\r\n            `\r\n        }\r\n    }}\r\n    ${({no_bg})=>{\r\n       if(no_bg === true) {\r\n           return css`\r\n            background:inherit;\r\n        `\r\n        }\r\n    }}\r\n    button{\r\n        margin-top: auto;   //button will be at the bottom of the form\r\n        margin-bottom: 2rem;\r\n    }\r\n\r\n    /* animate flag */\r\n    ${({animate})=>{\r\n        if(animate){\r\n            return css`\r\n                animation:animate_form 0.4s ease-in forwards;\r\n            `\r\n        }\r\n    }}\r\n\r\n    @keyframes animate_form{\r\n        0%{\r\n            opacity:0;\r\n            transform:translateX(-100%);\r\n        }\r\n        50%{\r\n            transform:translateX(50%);\r\n        }\r\n    }\r\n\r\n`\r\n","import { memo } from \"react\"\r\ntype LabelProps = { text:string, focus?:string  }\r\n\r\nconst LabelField = (props:LabelProps)=> <label className={props.focus ? 'transform' : ''}>{props.text}</label>\r\nexport default memo(LabelField)\r\n\r\n\r\n\r\n","import { useCallback, useState } from \"react\"\r\n\r\nconst useSubmit = () => {\r\n    const [controller] = useState(new AbortController())\r\n\r\n    const handleSubmit = useCallback(async(props:{url: string, method: 'GET'| 'POST'|'DELETE'|'PATCH', body: any}) => {\r\n        const {url, method, body} = props\r\n\r\n        const request = new Request(url, {\r\n            method,\r\n            body: JSON.stringify(body),\r\n            headers: {'content-type': 'application/json'},\r\n            credentials: 'include',\r\n            signal: controller.signal\r\n        })\r\n        try {\r\n            const res = await fetch(request)\r\n            return res.json()\r\n        } catch (error: any) {\r\n            return new Error('error occured', {cause: Error(error)})\r\n        }\r\n    }, [])\r\n\r\n    return {handleSubmit}\r\n}\r\nexport default useSubmit","import { ChangeEvent, Dispatch, FormEvent, SetStateAction, useCallback, useEffect, useState } from \"react\"\r\nimport Form from '../../Components/PureComponents/Form'\r\nimport FormGroup from \"../../Components/Journal Components/FormGroup/Form.group\"\r\nimport FormLabel from \"../../Components/Journal Components/FormGroup/Form.label\"\r\nimport { setLogin } from \"../../Redux/slices/user.slice\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport useSubmit from \"./useSubmit\"\r\nimport {  useNavigate } from \"react-router-dom\"\r\n\r\n\r\nconst useForm = () =>{\r\n    const [states, setStates] = useState<Record<any, any>>({})\r\n    const [loading, setLoading] = useState(false)\r\n    const [errors, setErrors] = useState(Array())\r\n    const [error, setError] = useState('')\r\n    const [disabled, setDisabled] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const {handleSubmit: handleFormSubmitUtil} = useSubmit()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const handleSubmit = useCallback( async(props:{e: FormEvent<HTMLFormElement>, url: string, setIsDisabled: Dispatch<SetStateAction<boolean>> }) => {\r\n        const {e, url, setIsDisabled } = props\r\n        e.preventDefault()\r\n        try{\r\n            setIsDisabled(true)\r\n            setLoading(true)\r\n\r\n            const data = await handleFormSubmitUtil({\r\n                url, body: states,\r\n                method: 'POST'\r\n            })\r\n\r\n            data['_id'] && !data['email'] &&  navigate('/login');    // if registration is success\r\n           data['_id'] && dispatch(setLogin(data['email']));    // if login is success\r\n\r\n            // if error occurs\r\n            'errors' in data && setErrors(data['errors'])\r\n            'error' in data && setError(data['error'])\r\n        }catch(err){\r\n            setErrors(Array(err))\r\n        }finally{\r\n            setIsDisabled(false)\r\n            setLoading(false)\r\n        }\r\n    }, [states])\r\n\r\n    const clearErrors = useCallback(() => setErrors([]), [])\r\n    const clearError = useCallback(() => setError(''), [])\r\n\r\n    useEffect(() => {\r\n        let timeout: NodeJS.Timeout\r\n        if(errors.length != 0){\r\n            timeout = setTimeout(clearErrors, 4000)\r\n        }\r\n        return () => clearTimeout(timeout)\r\n    }, [errors])\r\n\r\n    useEffect(() => {\r\n        let timeout: NodeJS.Timeout\r\n        if(error){\r\n            timeout = setTimeout(clearError, 4000)\r\n        }\r\n        return () => clearTimeout(timeout)\r\n    }, [error])\r\n\r\n\r\n    const handleChange = useCallback((value: string, state:string) =>{\r\n        setStates((old:any) => ({\r\n            ...old,\r\n            [state]:value\r\n        }))\r\n    }, [states])\r\n\r\n\r\n    const addNewState = useCallback(( props : {\r\n        state: string,\r\n        placeholder?: string,\r\n        name?: string,\r\n        id?: string,\r\n        type?: 'email' | 'password' | 'text'\r\n    }) => {\r\n        return {\r\n            value: states[props.state] || '',\r\n            onChange: (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => handleChange(e.target.value, props.state),\r\n            ...props\r\n        }\r\n    }, [states])\r\n\r\n\r\n    return { addNewState, setStates, states, Form, FormGroup, FormLabel, errors, loading, handleSubmit, disabled, setDisabled, error  }\r\n}\r\nexport default useForm"],"names":["FormGroup","children","styles","useState","focus","setFocus","StyledFormGroup","style","Children","child","type","cloneElement","memo","styled","SearchBar","props","useForm","addNewState","states","dispatch","useDispatch","useEffect","setSearch","backgroundColor","width","margin","marginInlineStart","marginInlineEnd","state","name","placeholder","mode","className","Input","handleFocus","useCallback","handleBlur","e","target","value","length","StyledInput","onFocus","onBlur","css","theme","useTheme","fill_color","useMemo","height","viewBox","fill","xmlns","d","stroke","strokeOpacity","strokeWidth","strokeLinecap","Form","onSubmit","animate","StyledForm","no_bg","LabelField","text","AbortController","controller","handleSubmit","url","method","body","request","Request","JSON","stringify","headers","credentials","signal","fetch","res","json","Error","cause","setStates","loading","setLoading","Array","errors","setErrors","error","setError","disabled","setDisabled","handleFormSubmitUtil","useSubmit","navigate","useNavigate","setIsDisabled","preventDefault","data","setLogin","clearErrors","clearError","timeout","setTimeout","clearTimeout","handleChange","old","onChange","FormLabel"],"sourceRoot":""}