{"version":3,"file":"static/js/header.1c4d71f3.chunk.js","mappings":"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","sources":["Utility/Hooks/useMountTransition.tsx","Components/Journal Components/Header/Hamburger.tsx","Components/PureComponents/Img.tsx","Components/Journal Components/Header/Header.logo.tsx","Components/Journal Components/Header/MiniNav.tsx","Components/Journal Components/Header/Header.tsx","Components/PureComponents/Span.tsx","Redux/hooks/useUser.tsx","Utility/Hooks/useClickListener.tsx","Utility/Hooks/useMediaQuery.tsx","Utility/Utility Components/If.tsx","Utility/Utility Components/withModalWrapper.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\n\r\nconst useMountTransition = ({isMounted, unmountDelay}: {isMounted: boolean, unmountDelay: number}) => {\r\n    const [hasTransitionedIn, setHasIsTransitionedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let timeoutId:any\r\n\r\n        if(isMounted && !hasTransitionedIn){\r\n            setHasIsTransitionedIn(true)\r\n        }else if(!isMounted && hasTransitionedIn){\r\n            timeoutId = setTimeout(() => setHasIsTransitionedIn(false), unmountDelay)\r\n        }\r\n        return () => clearTimeout(timeoutId)\r\n    }, [unmountDelay, isMounted, hasTransitionedIn])\r\n\r\n    return hasTransitionedIn\r\n\r\n}\r\nexport default useMountTransition","import { memo } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\n\r\nconst Hamburger = memo(({onClick} : {onClick :()=>void}) => {\r\n    return(\r\n        <StyledHamburger onClick={onClick}>\r\n            <div className=\"line l1\"></div>\r\n            <div className=\"line l2\"></div>\r\n            <div className=\"line l3\"></div>\r\n        </StyledHamburger>\r\n    )\r\n})\r\nexport default memo(Hamburger)\r\n\r\n\r\nconst StyledHamburger = styled.div`\r\n   width:3rem;\r\n   display:flex;\r\n   justify-content:space-between;\r\n   flex-direction:column;\r\n   cursor:pointer;\r\n   z-index:101;\r\n   margin-inline-start: auto;\r\n\r\n\r\n   .line{\r\n      height:0.2rem;\r\n      background:var(--clr);\r\n      margin-top:0.4rem;\r\n   }\r\n   .l2{\r\n      width:80%;\r\n   }\r\n   .l3{\r\n      width:70%;\r\n   }\r\n\r\n   @media (min-width:800px){\r\n      display:none;\r\n   }\r\n`","import { memo } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Img = ({src, alt, width}: {src: string, alt?:string, width?: any}) => {\r\n    return(\r\n        <StyledImg src={src} alt={alt}  width={width}/>\r\n    )\r\n}\r\nexport default memo(Img)\r\n\r\nconst StyledImg = styled.img<{width?: string}>`\r\n    width: ${({width}) => width};\r\n`","import { memo, useCallback } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\nimport Img from \"../../PureComponents/Img\"\r\nimport Span from \"../../PureComponents/Span\"\r\n\r\nconst HeaderLogo = () => {\r\n    const navigate = useNavigate()\r\n    const goToHome = useCallback(() => navigate('/'), [])\r\n\r\n    return(\r\n        <StyledHeaderLogo >\r\n            <Img src='./img/note.png' width={'2.5rem'}/>\r\n            <h1 onClick={goToHome} style={{cursor:'pointer'}}>\r\n                &nbsp;&nbsp;<Span cn='brand'>Simple</Span>&nbsp;\r\n                <Span>Note</Span>\r\n            </h1>\r\n        </StyledHeaderLogo>\r\n    )\r\n}\r\nexport default memo(HeaderLogo)\r\n\r\n\r\nconst StyledHeaderLogo = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: var(--header-height);\r\n\r\n    h1{\r\n        font-size: clamp(1.8rem, 2rem, 2vw);\r\n        font-weight: 600;\r\n    }\r\n\r\n    img{\r\n        transform: rotate(-20deg);\r\n    }\r\n`","import { lazy, memo, useEffect, useRef, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport If from \"../../../Utility/Utility Components/If\"\r\nimport withModalWrapper from \"../../../Utility/Utility Components/withModalWrapper\"\r\nimport WithSuspense from \"../../../Utility/Utility Components/WithSuspense\"\r\n\r\n\r\nconst Nav = lazy(() => import('./Nav' /* webpackChunkName: 'Nav' */))\r\n\r\nconst MiniNav = ({showNav, cn}: {showNav: boolean, cn?: string}) => {\r\n\r\n    const mini_ref = useRef<HTMLDivElement>(null)\r\n\r\n    // useEffect(() => {\r\n    //     if(showNav){\r\n    //         console.log('true')\r\n    //         setTimeout(() => {\r\n    //             mini_ref.current?.classList.add('in')\r\n    //             mini_ref.current?.classList.add('visible')\r\n    //         }, 20)\r\n    //     }\r\n    // }, [showNav])\r\n    // useEffect(() => {\r\n    //     if(!showNav){\r\n    //         setTimeout(() => {\r\n    //             mini_ref.current?.classList.remove('in', 'visible')\r\n    //         }, 10)\r\n    // //     }\r\n    // }, [showNav])\r\n\r\n    //for useMountTransition\r\n    return(\r\n        <StyledMiniNav className={cn}>\r\n            <WithSuspense Comp={() => <Nav/>} />\r\n        </StyledMiniNav>\r\n    )\r\n\r\n    // return(\r\n    //     <StyledMiniNav ref={mini_ref}>\r\n    //         <If condition={showNav}>\r\n    //             <WithSuspense Comp={() => <Nav/>} />\r\n    //         </If>\r\n    //     </StyledMiniNav>\r\n    // )\r\n}\r\nexport default memo(MiniNav)\r\n\r\n\r\n\r\nconst StyledMiniNav = styled.div`\r\n    --width: 50%;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    width: var(--width);\r\n    z-index: 1000;\r\n    height: 100%;\r\n\r\n    --opacity: 0;\r\n    --transform-x: 100%;\r\n    opacity: var(--opacity);\r\n    transform: translateX(var(--transform-x));\r\n    transition: opacity 0.5s ease, transform 0.5s ease;\r\n\r\n    @media (max-width: 500px){\r\n        --width: 100%;\r\n        /* width: 100%; */\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    nav{\r\n        background-color: var(--form-bg);\r\n        height: calc(100% - var(--header-height));\r\n        transform: translateY(var(--header-height));\r\n        flex-direction: column !important;\r\n        justify-content: flex-start !important;\r\n        padding: 1rem;\r\n    }\r\n\r\n    nav a{\r\n        margin: 1rem 0;\r\n        width: 100%;\r\n        text-align: center;\r\n    }\r\n\r\n    button.theme-toggle-btn{\r\n        margin-top: auto;\r\n    }\r\n`","import { lazy, memo, useCallback, useEffect, useState } from \"react\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\nimport useUser from \"../../../Redux/hooks/useUser\"\r\nimport useClickListener from \"../../../Utility/Hooks/useClickListener\"\r\nimport useMediaQuery from \"../../../Utility/Hooks/useMediaQuery\"\r\nimport useMountTransition from \"../../../Utility/Hooks/useMountTransition\"\r\nimport If from \"../../../Utility/Utility Components/If\"\r\nimport WithModalWrapper from \"../../../Utility/Utility Components/withModalWrapper\"\r\nimport WithSuspense from \"../../../Utility/Utility Components/WithSuspense\"\r\nimport Hamburger from \"./Hamburger\"\r\nimport HeaderLogo from \"./Header.logo\"\r\nimport MiniNav from \"./MiniNav\"\r\n\r\nconst Nav = lazy(() => import('./Nav' /* webpackChunkName: 'Nav' */))\r\nconst SearchBar = lazy(() => import('../SearchBar' /* webpackChunkName: 'SearchBar' */))\r\nconst MiniSearchBar = lazy(() => import( \"../Mini.SearchBar\" /* webpackChunkName: 'MiniSearchBar' */))\r\n// const MiniNav = lazy(() => import('./MiniNav' /* webpackChunkName: 'mini nav' */))\r\n\r\n\r\n\r\nconst Header = () => {\r\n    const [showNav, setShowNav] = useState(false)\r\n    const [shouldDisplaySearchBar, setShouldDisplaySearchBar] = useState(false)\r\n\r\n    const toggleNav = useCallback(() => setShowNav(v => !v), [])\r\n    const location = useLocation()\r\n\r\n    const [isLargerThan800] = useMediaQuery({width: 800})\r\n    const {user} = useUser()\r\n\r\n    const hasTransitionedIn = useMountTransition({isMounted: showNav, unmountDelay: 500})\r\n\r\n    useClickListener({\r\n        element: document,\r\n        handler: () => setShowNav(false),\r\n        eventName: 'click', run: showNav\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        setShouldDisplaySearchBar(location.pathname.includes('note'))\r\n    }, [location])\r\n\r\n\r\n    return(\r\n        <StyledHeader className=\"px\">\r\n            <HeaderLogo/>\r\n            <If condition={shouldDisplaySearchBar && user.notes?.length != 0 && isLargerThan800}>\r\n                <WithSuspense Comp={() => <SearchBar />}></WithSuspense>\r\n            </If>\r\n            <If condition={shouldDisplaySearchBar && user.notes?.length != 0 && !isLargerThan800}>\r\n                <WithSuspense Comp={() => <MiniSearchBar />}></WithSuspense>\r\n            </If>\r\n            <If condition={isLargerThan800}>\r\n                <WithSuspense Comp={Nav} />\r\n            </If>\r\n            <If condition={!isLargerThan800}>\r\n                <Hamburger onClick={toggleNav}/>\r\n                <If condition={showNav || hasTransitionedIn}>\r\n                    {/* <WithSuspense Comp={() => <WithModalWrapper><MiniNav showNav={showNav} /></WithModalWrapper> } /> */}\r\n                    <WithModalWrapper><MiniNav showNav={showNav} cn={`${hasTransitionedIn && 'in'} ${showNav  && 'visible'}`}/></WithModalWrapper>\r\n                </If>\r\n            </If>\r\n        </StyledHeader>\r\n    )\r\n}\r\nexport default memo(Header)\r\n\r\n\r\nconst StyledHeader = styled.header`\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: var(--body-bg);\r\n\r\n    @media (min-width:700px){\r\n        position:sticky;\r\n        top:0;\r\n        z-index:1;\r\n    }\r\n\r\n    div.in.visible{\r\n        --opacity: 1;\r\n        --transform-x: 0;\r\n    }\r\n`","import { CSSProperties, memo, ReactNode } from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\n\r\nconst Span = ({children, style, cn, bg}: SpanPropType) => {\r\n    const bg_clr = bg ? `#${Math.random().toString(16).slice(2,8)}` : ''\r\n\r\n    return <StyledSpan style={style} className={cn} bg_clr={bg_clr} >{children}</StyledSpan>\r\n}\r\nexport default memo(Span)\r\n\r\n\r\ninterface SpanPropType {\r\n    children?: ReactNode\r\n    style?: CSSProperties,\r\n    cn?: string,\r\n    bg?: boolean\r\n}\r\n\r\nconst StyledSpan = styled.span<{bg_clr?: string}>`\r\n\r\n${({bg_clr}) => {\r\n    if(bg_clr){\r\n        return css`\r\n            background: ${bg_clr};\r\n        `\r\n    }\r\n}}\r\n\r\n`","import { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst useUser = () => {\r\n    const user = useSelector((state: User) => state.user)\r\n    const dispatch = useDispatch()\r\n    return {user, dispatch}\r\n}\r\nexport default useUser","import { useEffect, useRef } from \"react\"\r\n\r\nconst useClickListener = (props: IListenerProps) => {\r\n    const {eventName = 'click',eventName2 = 'keyup', element2 = window, handler, element = window, run} = props\r\n\r\n    const handlerRef = useRef(handler)\r\n    useEffect(() => {\r\n        handlerRef.current = handler\r\n    }, [handler])\r\n\r\n\r\n    useEffect(()=>{\r\n        const eventListener = (e:Event | any ) => {\r\n            (e.target.id == 'wrapper') && handlerRef.current()\r\n        }\r\n        const eventListener2 = (e:KeyboardEvent) => {\r\n            (e.key === 'Escape') && handlerRef.current()\r\n        }\r\n\r\n        if(run){\r\n            element?.addEventListener(eventName, eventListener, false)\r\n            element2?.addEventListener(eventName2, eventListener2, false)\r\n        }else{\r\n            element?.removeEventListener(eventName, eventListener, false)\r\n            element2?.removeEventListener(eventName2, eventListener2, false)\r\n        }\r\n        return () => {\r\n            element?.removeEventListener(eventName, eventListener, false)\r\n            element2?.removeEventListener(eventName2, eventListener2, false)\r\n        }\r\n    }, [eventName, element, run])\r\n\r\n}\r\nexport default useClickListener\r\n\r\n\r\n\r\n\r\n\r\ninterface IListenerProps{\r\n    handler: any,\r\n    eventName?: 'click',\r\n    eventName2?: 'keyup',\r\n    element2?: Window,\r\n    element: Element | null | Window & typeof globalThis | Document,\r\n    run: boolean\r\n}","import { useCallback, useEffect, useState } from \"react\"\r\n\r\nconst useMediaQuery = ({width = 750 }: {width?: number}) => {\r\n    const [show, setShow] = useState(window.innerWidth > width)\r\n    const handleResize = useCallback(() => setShow(window.innerWidth > width), [])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleResize)\r\n        return () => window.removeEventListener('resize', handleResize)\r\n    }, [])\r\n\r\n    return [show]\r\n}\r\nexport default useMediaQuery","import { ReactNode } from \"react\"\r\n\r\nconst If = ( {condition, children} : {condition:any, children:ReactNode} ) =>{\r\n    if(!!condition){\r\n        return <>{children}</>\r\n    }\r\n    return null\r\n}\r\nexport default If","import { CSSProperties } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst WithModalWrapper = ({children, style }:\r\n    {children: JSX.Element,  style?: CSSProperties }\r\n) => {\r\n    return(\r\n        <StyledwithModalWrapper role='wrapper' id='wrapper' style={style}>\r\n            {children}\r\n        </StyledwithModalWrapper>\r\n    )\r\n}\r\nexport default WithModalWrapper\r\n\r\n\r\n\r\nconst StyledwithModalWrapper = styled.div`\r\n    position: fixed;\r\n    inset: 0;\r\n    height: 100%;\r\n    background-color: rgba(0,0,0,0.3);\r\n    z-index: 100;\r\n    transition: background 0.5s;\r\n`"],"names":["isMounted","unmountDelay","useState","hasTransitionedIn","setHasIsTransitionedIn","useEffect","timeoutId","setTimeout","clearTimeout","Hamburger","memo","onClick","StyledHamburger","className","styled","Img","src","alt","width","StyledImg","HeaderLogo","navigate","useNavigate","goToHome","useCallback","StyledHeaderLogo","style","cursor","Span","cn","Nav","lazy","MiniNav","showNav","useRef","StyledMiniNav","WithSuspense","Comp","SearchBar","MiniSearchBar","Header","setShowNav","shouldDisplaySearchBar","setShouldDisplaySearchBar","toggleNav","v","location","useLocation","useMediaQuery","isLargerThan800","user","useUser","useMountTransition","useClickListener","element","document","handler","eventName","run","pathname","includes","StyledHeader","If","condition","notes","length","children","bg_clr","bg","Math","random","toString","slice","StyledSpan","css","useSelector","state","dispatch","useDispatch","props","eventName2","element2","window","handlerRef","current","eventListener","e","target","id","eventListener2","key","addEventListener","removeEventListener","innerWidth","show","setShow","handleResize","StyledwithModalWrapper","role"],"sourceRoot":""}