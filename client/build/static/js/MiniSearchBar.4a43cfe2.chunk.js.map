{"version":3,"file":"static/js/MiniSearchBar.4a43cfe2.chunk.js","mappings":"iNAQMA,GAAYC,EAAAA,EAAAA,OAAK,kBAAM,yDAEvBC,EAAgB,WAClB,OAAoEC,EAAAA,EAAAA,WAAS,GAA7E,eAAOC,EAAP,KAAmCC,EAAnC,KAEMC,GAAsBC,EAAAA,EAAAA,cAAY,kBAAMF,GAA8B,KAAO,IAC7EG,GAAuBD,EAAAA,EAAAA,cAAY,kBAAMF,GAA8B,KAAQ,IASrF,OAPAI,EAAAA,EAAAA,GAAiB,CACbC,QAASC,SACTC,QAASJ,EACTK,IAAKT,KAKL,iCACA,SAAC,IAAD,CAAQU,QAASR,EAAqBS,MAAO,CAACC,kBAAmB,QAAjE,UACI,SAAC,IAAD,OAEJ,SAAC,IAAD,CAAIC,UAAWb,EAAf,UACI,SAAC,IAAD,CAAkBW,MAAO,CAACG,QAAS,OAAQC,eAAgB,UAA3D,UACI,SAAC,IAAD,CAAcC,KAAM,kBAAM,SAACpB,EAAD,CAAWe,MAAO,CAACM,OAAQ,QAASC,aAAc,QAASC,iBAAkB,qBAMvH,WAAeC,EAAAA,EAAAA,MAAKtB,I,sHC9BduB,EAAS,SAACC,GACZ,IAAOC,EAAaD,EAAbC,GAAGC,EAAUF,EAAVE,GAAGC,EAAOH,EAAPG,EAAEC,EAAKJ,EAALI,EAEhB,OACG,UAACC,EAAD,CAAcJ,GAAIA,EAAIC,GAAIA,EAAIC,EAAGA,EAAGC,EAAGA,EAAvC,WACG,gBAAKE,UAAU,eACf,gBAAKA,UAAU,kBAIxB,GAAeR,EAAAA,EAAAA,MAAKC,GAEdM,EAAeE,EAAAA,GAAAA,IAAH,w1BAUJ,SAAAP,GAAK,OAAEA,EAAMG,EAAIH,EAAMG,EAAI,UAC1B,SAAAH,GAAK,OAAEA,EAAMI,EAAIJ,EAAMI,EAAI,UCLpCI,EAAS,SAACR,GACZ,IAAOS,EAA0DT,EAA1DS,SAAUC,EAAgDV,EAAhDU,GAAItB,EAA4CY,EAA5CZ,QAASuB,EAAmCX,EAAnCW,KAAMC,EAA6BZ,EAA7BY,WAAYC,EAAiBb,EAAjBa,OAAQxB,EAASW,EAATX,MAGxD,OACI,UAACyB,EAAD,CAAcR,UAAWI,EAAItB,QAASA,EAASuB,KAAMA,EAAMI,SAAUH,EAAYvB,MAAOA,EAAxF,WACI,UAAC2B,EAAA,EAAD,CAAIzB,UAAWsB,EAAf,eAAwB,SAAC,EAAD,IAAxB,QACA,UAACG,EAAA,EAAD,CAAIzB,WAAYsB,GAAUb,EAAMiB,cAAhC,cAAiDjB,EAAMiB,cAAvD,QACA,UAACD,EAAA,EAAD,CAAIzB,WAAYsB,EAAhB,cAA0BJ,EAA1B,WAIZ,GAAeX,EAAAA,EAAAA,MAAKU,GAIdM,EAAeP,EAAAA,GAAAA,OAAH,8gBAuBZ,SAACP,GACC,OAAOA,EAAMW,MACT,IAAK,WAAY,OAAOO,EAAAA,EAAAA,IAAP,8dA8BjB,IAAK,iBAAkB,OAAOA,EAAAA,EAAAA,IAAP,6GAKvB,IAAK,kBAAmB,OAAOA,EAAAA,EAAAA,IAAP,wMAKxB,IAAK,aAAc,OAAOA,EAAAA,EAAAA,IAAP,mEAGnB,IAAK,iBAAkB,OAAOA,EAAAA,EAAAA,IAAP,qzB,sDC9FnC,IAXmB,WACf,IAAOC,GAASC,EAAAA,EAAAA,KAATD,MACDE,GAAaC,EAAAA,EAAAA,UAAQ,kBAAMH,EAAQ,UAAY,YAAW,CAACA,IACjE,OACI,gBAAKb,UAAU,gBAAf,UACI,gBAAKiB,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,UACI,iBAAMC,EAAE,wVAAwVC,OAAQR,EAAYS,cAAc,MAAMC,YAAY,IAAIC,cAAc","sources":["Components/Journal Components/Mini.SearchBar.tsx","Components/Journal Components/Loader.tsx","Components/PureComponents/Button.tsx","Svg/SearchIcon.tsx"],"sourcesContent":["import { lazy, memo, useCallback, useState } from \"react\"\r\nimport SearchIcon from \"../../Svg/SearchIcon\"\r\nimport useClickListener from \"../../Utility/Hooks/useClickListener\"\r\nimport If from \"../../Utility/Utility Components/If\"\r\nimport WithModalWrapper from \"../../Utility/Utility Components/withModalWrapper\"\r\nimport WithSuspense from \"../../Utility/Utility Components/WithSuspense\"\r\nimport Button from \"../PureComponents/Button\"\r\n\r\nconst SearchBar = lazy(() => import(\"./SearchBar\" /* webpackChunkName: 'SearchBar' */))\r\n\r\nconst MiniSearchBar = () => {\r\n    const [shouldDisplayMiniSearchBar, setShouldDisplayMiniSearchBar] = useState(false)\r\n\r\n    const enableMiniSearchBar = useCallback(() => setShouldDisplayMiniSearchBar(true), [])\r\n    const disableMiniSearchBar = useCallback(() => setShouldDisplayMiniSearchBar(false), [])\r\n\r\n    useClickListener({\r\n        element: document,\r\n        handler: disableMiniSearchBar,\r\n        run: shouldDisplayMiniSearchBar\r\n    })\r\n\r\n\r\n    return(\r\n        <>\r\n        <Button onClick={enableMiniSearchBar} style={{marginInlineStart: 'auto'}}>\r\n            <SearchIcon />\r\n        </Button>\r\n        <If condition={shouldDisplayMiniSearchBar}>\r\n            <WithModalWrapper style={{display: 'flex', justifyContent: 'center'}}>\r\n                <WithSuspense Comp={() => <SearchBar style={{margin: 'unset', marginInline: 'unset', marginBlockStart: '3rem'}}/> }/>\r\n            </WithModalWrapper>\r\n        </If>\r\n        </>\r\n    )\r\n}\r\nexport default memo(MiniSearchBar)\r\n\r\n","import { memo } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\n\r\ntype LoaderProps = {px?: number, py?: number, w?: number, h?: string}\r\n\r\nconst Loader = (props: LoaderProps) => {\r\n    const {py,px,w,h} = props\r\n\r\n   return(\r\n      <StyledLoader py={py} px={px} w={w} h={h}>\r\n         <div className=\"circle c1\"></div>\r\n         <div className=\"circle c2\"></div>\r\n      </StyledLoader>\r\n   )\r\n}\r\nexport default memo(Loader)\r\n\r\nconst StyledLoader = styled.div<{px?: number, py?: number, w?: number, h?: string}>`\r\n   height:100%;\r\n   position:relative;\r\n   display:flex;\r\n   align-items:center;\r\n   justify-content:center;\r\n   text-align:center;\r\n\r\n   .circle{\r\n      position:absolute;\r\n      width:${props=>props.w ? props.w : '2rem'};\r\n      height:${props=>props.h ? props.h : '2rem'};\r\n      border-radius:50%;\r\n      border:clamp(0.3rem, 0.5rem,0.5vw) solid transparent;\r\n      border-top-color:purple;\r\n      animation: animate_loaders 1s linear infinite;\r\n   }\r\n\r\n   .c2{\r\n      border-bottom-color: red;\r\n      border-top-color:transparent;\r\n   }\r\n\r\n\r\n   @keyframes animate_loaders{\r\n      0%{\r\n         border-width: clamp(0.3rem, 0.5rem, 0.5vw);\r\n         transform: rotate(0);\r\n      }50%{\r\n         border-width: clamp(0.1rem,0.2rem,0.2vw);\r\n         transform: rotate(180deg);\r\n      }100%{\r\n         border-width: clamp(0.3rem, 0.5rem, 0.5vw);\r\n         transform: rotate(360deg);\r\n      }\r\n   }\r\n`","import { ActionCreatorWithoutPayload } from \"@reduxjs/toolkit\";\r\nimport { CSSProperties, memo, ReactNode } from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\nimport If from \"../../Utility/Utility Components/If\"\r\nimport Loader from \"../Journal Components/Loader\"\r\n\r\ninterface PropType {\r\n    children?: JSX.Element | JSX.Element[] | string | ReactNode,\r\n    cn?: string,\r\n    onClick?:\r\n    (() => Promise<void>) |\r\n    (() => {\r\n        type: ActionCreatorWithoutPayload<string>;\r\n    } | void) |\r\n    (() => { payload: undefined; type: string; }) |\r\n    any,\r\n\r\n    mode?: BtnMode,\r\n    isDisabled?: boolean,\r\n    loader?: boolean,\r\n    style?: CSSProperties,\r\n    redirect_text?: string\r\n}\r\n\r\nconst Button = (props: PropType) => {\r\n    const {children, cn, onClick, mode, isDisabled, loader, style} = props\r\n\r\n\r\n    return(\r\n        <StyledButton className={cn} onClick={onClick} mode={mode} disabled={isDisabled} style={style}>\r\n            <If condition={loader}> <Loader /> </If>\r\n            <If condition={!loader && props.redirect_text}> {props.redirect_text} </If>\r\n            <If condition={!loader}> {children} </If>\r\n        </StyledButton>\r\n    )\r\n}\r\nexport default memo(Button)\r\n\r\n\r\n\r\nconst StyledButton = styled.button<{mode?: BtnMode}>`\r\n    text-decoration: none;\r\n    padding: clamp(0.3rem, 0.4rem, 0.4vw) clamp(0.7rem, 0.9rem, 0.9vw);\r\n    display: grid;\r\n    place-items: center;\r\n\r\n    :disabled{\r\n        background-color: #424242;\r\n        cursor: not-allowed;\r\n        border: none;\r\n        /* color: ; */\r\n        color: #979797;\r\n        /* width: 100%; */\r\n    }\r\n\r\n\r\n    transition: background 0.3s;\r\n    background-color: var(--body-bg);   // for theme-toggling button\r\n    cursor: pointer;\r\n    border: none;\r\n\r\n\r\n\r\n    ${(props)=>{\r\n        switch(props.mode){\r\n            case \"hero_btn\": return css`\r\n                padding:1rem 3rem;\r\n                /* height:unset; */\r\n                display:flex;\r\n                /* align-items:center;    //making text vertically center */\r\n                margin-top:3rem;\r\n                background-color: var(--brand);\r\n                font-weight:600;\r\n                box-shadow:0 0.2rem 0.2rem rgba(0, 0, 0, 0.3);\r\n                color: white;\r\n                box-shadow: var(--btn-shadow);\r\n            `\r\n\r\n            // case 'delete_note_btn': return css`\r\n            //     width:3rem;\r\n            //     display:flex;\r\n            //     align-items:center;\r\n            //     justify-content:center;\r\n            //     &::before{\r\n            //         content:'';\r\n            //         position:absolute;\r\n\r\n            //         background-image:${props.loader ? '' : 'url(\"./imgs/trash.png\")'};\r\n            //         background-repeat:no-repeat;\r\n            //         width:100%;\r\n            //         height:100%;\r\n            //         display:flex;\r\n            //         z-index:1;\r\n            //     }\r\n            // `\r\n            case 'toggle-nav-btn': return css`\r\n                margin-inline-start: auto;\r\n                z-index: 6;\r\n            `\r\n\r\n            case 'create_note_btn': return css`\r\n                background:var(--success-400);\r\n                /* color:hsl(0, 0%, 90%); */\r\n                /* box-shadow:0 0.2rem 0.2rem rgba(0, 0, 0, 0.3); */\r\n            `\r\n            case 'logout_btn': return css`\r\n                height:unset;\r\n            `\r\n            case 'login_form_btn': return css`\r\n                width:100%;\r\n                position: relative;\r\n                z-index: 2;\r\n                background-color: green;\r\n                color: white;\r\n                border: none;\r\n                height: 4rem;\r\n                /* &:before{\r\n                    content: '';\r\n                    position:absolute;\r\n                    left: 0;\r\n                    top: 0;\r\n                    height: 100%;\r\n                    width: 0px;\r\n                    transition: all 0.3s;\r\n                }\r\n                &:hover{\r\n                    color: white;\r\n                }\r\n                &:hover::before{\r\n                    width: 100%;\r\n                    background-color: var(--brand);\r\n                    z-index: -1;\r\n                } */\r\n            `\r\n        }\r\n    }}\r\n`","import { useMemo } from \"react\"\r\nimport useTheme from \"../Redux/hooks/useTheme\"\r\n\r\nconst SearchIcon = () => {\r\n    const {theme} = useTheme()\r\n    const fill_color = useMemo(() => theme ? '#8D63F1' : '#3B0C9E', [theme])\r\n    return(\r\n        <div className=\"svg-container\">\r\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M20 20L15.514 15.506L20 20ZM18 9.5C18 11.7543 17.1045 13.9163 15.5104 15.5104C13.9163 17.1045 11.7543 18 9.5 18C7.24566 18 5.08365 17.1045 3.48959 15.5104C1.89553 13.9163 1 11.7543 1 9.5C1 7.24566 1.89553 5.08365 3.48959 3.48959C5.08365 1.89553 7.24566 1 9.5 1C11.7543 1 13.9163 1.89553 15.5104 3.48959C17.1045 5.08365 18 7.24566 18 9.5V9.5Z\" stroke={fill_color} strokeOpacity=\"0.7\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchIcon"],"names":["SearchBar","lazy","MiniSearchBar","useState","shouldDisplayMiniSearchBar","setShouldDisplayMiniSearchBar","enableMiniSearchBar","useCallback","disableMiniSearchBar","useClickListener","element","document","handler","run","onClick","style","marginInlineStart","condition","display","justifyContent","Comp","margin","marginInline","marginBlockStart","memo","Loader","props","py","px","w","h","StyledLoader","className","styled","Button","children","cn","mode","isDisabled","loader","StyledButton","disabled","If","redirect_text","css","theme","useTheme","fill_color","useMemo","width","height","viewBox","fill","xmlns","d","stroke","strokeOpacity","strokeWidth","strokeLinecap"],"sourceRoot":""}